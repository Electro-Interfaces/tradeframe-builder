#!/bin/bash

# TradeFrame Remote Deployment Script
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π TradeFrame –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä..."

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
REMOTE_USER="${REMOTE_USER:-user}"
REMOTE_HOST="${REMOTE_HOST:-your-server.com}"
REMOTE_PATH="${REMOTE_PATH:-/home/user/webapp}"
APP_NAME="tradeframe-builder"
GIT_REPO="${GIT_REPO:-https://github.com/your-username/tradeframe-builder.git}"

echo "üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–µ–ø–ª–æ—è:"
echo "   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $REMOTE_USER"
echo "   –°–µ—Ä–≤–µ—Ä: $REMOTE_HOST"
echo "   –ü—É—Ç—å: $REMOTE_PATH"
echo "   –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $GIT_REPO"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
if [ -z "$REMOTE_HOST" ] || [ "$REMOTE_HOST" = "your-server.com" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é REMOTE_HOST"
    echo "   export REMOTE_HOST=your-actual-server.com"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
ssh_exec() {
    ssh "$REMOTE_USER@$REMOTE_HOST" "$1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
scp_copy() {
    scp -r "$1" "$REMOTE_USER@$REMOTE_HOST:$2"
}

echo "üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∏–ª–¥–∞..."
npm run build:prod

echo "üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É $REMOTE_HOST..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
if ! ssh_exec "echo '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ'"; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É"
    exit 1
fi

echo "üìÇ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞..."
ssh_exec "mkdir -p $REMOTE_PATH && cd $REMOTE_PATH"

echo "üîÑ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
if ssh_exec "[ -d '$REMOTE_PATH/.git' ]"; then
    echo "   –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
    ssh_exec "cd $REMOTE_PATH && git fetch origin && git reset --hard origin/main"
else
    echo "   –ö–ª–æ–Ω–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
    ssh_exec "cd $(dirname $REMOTE_PATH) && git clone $GIT_REPO $(basename $REMOTE_PATH)"
fi

echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
ssh_exec "cd $REMOTE_PATH && npm install --production"

echo "üèóÔ∏è –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–∏–ª–¥–∞..."
scp_copy "./dist" "$REMOTE_PATH/"

echo "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
scp_copy "./server.js" "$REMOTE_PATH/"
scp_copy "./ecosystem.config.js" "$REMOTE_PATH/"
scp_copy "./package.json" "$REMOTE_PATH/"

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
ssh_exec "cd $REMOTE_PATH && cp ecosystem.config.js ecosystem.config.js.backup"

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PM2 –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
cat > /tmp/ecosystem.remote.config.js << 'EOL'
export default {
  apps: [{
    name: 'tradeframe-prod',
    script: 'server.js',
    cwd: '/home/user/webapp',
    env: {
      PORT: 8080,
      HOST: '0.0.0.0',
      NODE_ENV: 'production'
    },
    autorestart: true,
    watch: false,
    max_memory_restart: '2G',
    instances: 1,
    exec_mode: 'cluster'
  }]
}
EOL

scp_copy "/tmp/ecosystem.remote.config.js" "$REMOTE_PATH/ecosystem.config.js"

echo "üö¶ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ PM2..."
ssh_exec "cd $REMOTE_PATH && npx pm2 delete tradeframe-prod 2>/dev/null || true"
ssh_exec "cd $REMOTE_PATH && npx pm2 start ecosystem.config.js"
ssh_exec "cd $REMOTE_PATH && npx pm2 save"
ssh_exec "cd $REMOTE_PATH && npx pm2 startup"

echo "üìä –°—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
ssh_exec "cd $REMOTE_PATH && npx pm2 status"

echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://$REMOTE_HOST:8080"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "   ssh $REMOTE_USER@$REMOTE_HOST 'cd $REMOTE_PATH && npx pm2 status'"
echo "   ssh $REMOTE_USER@$REMOTE_HOST 'cd $REMOTE_PATH && npx pm2 logs tradeframe-prod'"
echo "   ssh $REMOTE_USER@$REMOTE_HOST 'cd $REMOTE_PATH && npx pm2 restart tradeframe-prod'"
echo "   ssh $REMOTE_USER@$REMOTE_HOST 'cd $REMOTE_PATH && npx pm2 stop tradeframe-prod'"

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
rm -f /tmp/ecosystem.remote.config.js

echo "üéâ –î–µ–ø–ª–æ–π TradeFrame –∑–∞–≤–µ—Ä—à–µ–Ω!"