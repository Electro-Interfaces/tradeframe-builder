#!/usr/bin/env node

/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–¥–æ–≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ Telegram
 */

const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://tohtryzyffcebtyvkxwh.supabase.co';
const serviceRoleKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRvaHRyeXp5ZmZjZWJ0eXZreHdoIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Njg3NTQ0OCwiZXhwIjoyMDcyNDUxNDQ4fQ.kN6uF9YhJzbzu2ugHRQCyzuNOwawsTDtwelGO0uCjyY';

const supabase = createClient(supabaseUrl, serviceRoleKey, {
  auth: { autoRefreshToken: false, persistSession: false }
});

async function debugVerificationCodes() {
  console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–¥–æ–≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏...');
  
  try {
    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–¥—ã –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    const { data: allCodes, error: allError } = await supabase
      .from('telegram_verification_codes')
      .select(`
        *,
        users:user_id (
          name,
          email
        )
      `)
      .order('created_at', { ascending: false });
    
    if (allError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–æ–≤:', allError.message);
      return;
    }
    
    console.log(`üìä –í—Å–µ–≥–æ –∫–æ–¥–æ–≤ –≤ –±–∞–∑–µ: ${allCodes?.length || 0}`);
    
    if (allCodes && allCodes.length > 0) {
      console.log('\nüìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–¥–æ–≤:');
      allCodes.forEach((code, index) => {
        const user = code.users;
        const isActive = !code.is_used && new Date(code.expires_at) > new Date();
        const status = code.is_used ? '‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω' : (isActive ? 'üü° –ê–∫—Ç–∏–≤–Ω—ã–π' : '‚ùå –ü—Ä–æ—Å—Ä–æ—á–µ–Ω');
        
        console.log(`${index + 1}. ${code.verification_code} - ${user?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} (${user?.email || '–Ω–µ—Ç email'})`);
        console.log(`   üìÖ –°–æ–∑–¥–∞–Ω: ${new Date(code.created_at).toLocaleString('ru-RU')}`);
        console.log(`   ‚è∞ –ò—Å—Ç–µ–∫–∞–µ—Ç: ${new Date(code.expires_at).toLocaleString('ru-RU')}`);
        console.log(`   üì± –°—Ç–∞—Ç—É—Å: ${status}`);
        if (code.used_at) {
          console.log(`   ‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω: ${new Date(code.used_at).toLocaleString('ru-RU')}`);
        }
        console.log('');
      });
    } else {
      console.log('üì≠ –ù–µ—Ç –∫–æ–¥–æ–≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      console.log('üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.log('   ‚Ä¢ –ö–æ–¥ –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å');
      console.log('   ‚Ä¢ –û—à–∏–±–∫–∞ –≤ —Å–µ—Ä–≤–∏—Å–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–æ–≤');
      console.log('   ‚Ä¢ –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–¥—ã
    const { data: activeCodes, error: activeError } = await supabase
      .from('telegram_verification_codes')
      .select('*')
      .eq('is_used', false)
      .gt('expires_at', new Date().toISOString());
    
    if (!activeError) {
      console.log(`üü° –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–¥–æ–≤: ${activeCodes?.length || 0}`);
    }
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å Telegram
    const { data: telegramUsers, error: usersError } = await supabase
      .from('users')
      .select('name, email, telegram_chat_id, telegram_verified_at')
      .not('telegram_chat_id', 'is', null);
    
    if (!usersError) {
      console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å Telegram: ${telegramUsers?.length || 0}`);
      if (telegramUsers && telegramUsers.length > 0) {
        telegramUsers.forEach(user => {
          console.log(`   üì± ${user.name} (${user.email}) - Chat ID: ${user.telegram_chat_id}`);
          console.log(`      –ü–æ–¥–∫–ª—é—á–µ–Ω: ${new Date(user.telegram_verified_at).toLocaleString('ru-RU')}`);
        });
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message);
  }
}

debugVerificationCodes().then(() => {
  console.log('\nüéØ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:');
  console.log('1. –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
  console.log('2. –í–æ–π—Ç–∏ –ø–æ–¥ –Ω—É–∂–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
  console.log('3. –ü–µ—Ä–µ–π—Ç–∏ –≤ –ü—Ä–æ—Ñ–∏–ª—å ‚Üí –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ ‚Üí Telegram');
  console.log('4. –ù–∞–∂–∞—Ç—å "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"');
  console.log('5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø–æ—è–≤–∏–ª—Å—è –ª–∏ –∫–æ–¥ –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ');
  process.exit(0);
}).catch(console.error);