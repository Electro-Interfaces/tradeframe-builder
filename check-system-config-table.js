/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã system_config
 * –∏ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –¥–ª—è trading_network_integration
 */

import { createClient } from '@supabase/supabase-js';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ)
const SUPABASE_URL = 'https://tohtryzyffcebtyvkywh.supabase.co';
const SUPABASE_SERVICE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRvaHRyeXp5ZmZjZWJ0eXZreXdoIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Njg3NTQ0OCwiZXhwIjoyMDcyNDUxNDQ4fQ.kN6uF9YhJzbzu2ugHRQCyzuNOwawsTDtwelGO0uCjyY';

const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_KEY);

async function checkSystemConfig() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã system_config...\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã...');
    const { data: tables, error: tablesError } = await supabase.rpc('get_tables');
    
    if (tablesError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü, –ø—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å...');
    } else {
      const systemConfigExists = tables?.some(table => table.table_name === 'system_config');
      console.log(`üìã –¢–∞–±–ª–∏—Ü–∞ system_config: ${systemConfigExists ? '‚úÖ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' : '‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}`);
    }

    // 2. –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
    console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã...');
    const { data, error } = await supabase
      .from('system_config')
      .select('*')
      .limit(1);

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ system_config:', error);
      
      if (error.code === '42P01') {
        console.log('\nüîß –¢–∞–±–ª–∏—Ü–∞ system_config –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–æ–∑–¥–∞–µ–º...');
        await createSystemConfigTable();
      } else {
        console.log('üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏:');
        console.log('   - –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞');
        console.log('   - –¢–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –∏–º–µ–µ—Ç –¥—Ä—É–≥—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É');
        console.log('   - –ü—Ä–æ–±–ª–µ–º—ã —Å RLS (Row Level Security)');
      }
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ system_config –¥–æ—Å—Ç—É–ø–Ω–∞');
      console.log('üìä –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:', data?.[0] || '–ü—É—Å—Ç–∞—è —Ç–∞–±–ª–∏—Ü–∞');
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
    const { data: configs, error: configsError } = await supabase
      .from('system_config')
      .select('config_key, description, is_active')
      .order('created_at', { ascending: false });

    if (configsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π:', configsError);
    } else {
      console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π: ${configs?.length || 0}`);
      configs?.forEach(config => {
        console.log(`   ‚Ä¢ ${config.config_key} - ${config.description} (${config.is_active ? '–∞–∫—Ç–∏–≤–Ω–∞' : '–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞'})`);
      });
    }

    // 4. –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ trading_network_integration
    console.log('\n4Ô∏è‚É£ –ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–∏ trading_network_integration...');
    const { data: tradingConfig, error: tradingError } = await supabase
      .from('system_config')
      .select('*')
      .eq('config_key', 'trading_network_integration')
      .single();

    if (tradingError) {
      if (tradingError.code === 'PGRST116') {
        console.log('‚ùå –ó–∞–ø–∏—Å—å trading_network_integration –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        console.log('\nüîß –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å...');
        await createTradingNetworkConfig();
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ trading_network_integration:', tradingError);
      }
    } else {
      console.log('‚úÖ –ó–∞–ø–∏—Å—å trading_network_integration –Ω–∞–π–¥–µ–Ω–∞:');
      console.log(JSON.stringify(tradingConfig, null, 2));
    }

  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

async function createSystemConfigTable() {
  console.log('üî® –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É system_config...');
  
  const createTableSQL = `
    CREATE TABLE IF NOT EXISTS system_config (
      id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
      config_key VARCHAR(255) UNIQUE NOT NULL,
      value JSONB,
      description TEXT,
      is_active BOOLEAN DEFAULT true,
      created_at TIMESTAMPTZ DEFAULT now(),
      updated_at TIMESTAMPTZ DEFAULT now()
    );

    -- –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
    CREATE INDEX IF NOT EXISTS idx_system_config_key ON system_config(config_key);
    CREATE INDEX IF NOT EXISTS idx_system_config_active ON system_config(is_active);
  `;

  try {
    const { error } = await supabase.rpc('exec_sql', { sql: createTableSQL });
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã:', error);
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ system_config —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    }
  } catch (error) {
    console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É —á–µ—Ä–µ–∑ RPC, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±...');
    console.log('üí° –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard:');
    console.log(createTableSQL);
  }
}

async function createTradingNetworkConfig() {
  console.log('üîß –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é trading_network_integration...');

  const defaultConfig = {
    enabled: true,
    baseUrl: 'https://pos.autooplata.ru/tms',
    systemId: '15',
    defaultStationId: '4',
    authType: 'bearer',
    apiKey: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJsb2dpbiI6eyJpZCI6IkFDQ0FFNDA4LTYzMzItNDI0NS04NUIxLTI1RjkxNEYzQkQ2NCIsIm5hbWUiOiJVc2VyVGVzdCIsInJvbGUiOjB9LCJ1c2VyIjp7ImlkIjoiQUNDQUU0MDgtNjMzMi00MjQ1LTg1QjEtMjVGOTE0RjNCRDY0IiwibmFtZSI6IlVzZXJUZXN0In0sImV4cCI6MTc1NzE1NzkzN30.7fDPBwtWej80K2ePRXYKXsJH3b3pLSUqtjo2uIbyXEE',
    timeout: 30000,
    retryAttempts: 3,
    endpoints: {
      tanks: '/v1/tanks',
      transactions: '/v1/transactions'
    }
  };

  try {
    const { data, error } = await supabase
      .from('system_config')
      .insert({
        config_key: 'trading_network_integration',
        value: defaultConfig,
        description: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Ç–æ—Ä–≥–æ–≤–æ–π —Å–µ—Ç—å—é pos.autooplata.ru',
        is_active: true
      })
      .select();

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
    } else {
      console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è trading_network_integration —Å–æ–∑–¥–∞–Ω–∞:');
      console.log(JSON.stringify(data[0], null, 2));
    }
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkSystemConfig().then(() => {
  console.log('\nüéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  process.exit(0);
}).catch(error => {
  console.error('üí• –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞:', error);
  process.exit(1);
});