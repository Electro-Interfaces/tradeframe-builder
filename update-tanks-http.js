import https from 'https';
import url from 'url';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞—à–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const SUPABASE_URL = 'https://cqwzqkrfyjdcwpovzyrw.supabase.co';
const SERVICE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNxd3pxa3JmeWpkY3dwb3Z6eXJ3Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTcyNTU0NTQ5MSwiZXhwIjoyMDQxMTIxNDkxfQ.3-RZIAQe5JaLZgBD4lKoqGG9U3YkQHt9xQT3yzL4WNE';

/**
 * –í—ã–ø–æ–ª–Ω–∏—Ç—å HTTP –∑–∞–ø—Ä–æ—Å –∫ Supabase
 */
async function makeRequest(endpoint, method = 'GET', data = null) {
    return new Promise((resolve, reject) => {
        const requestUrl = `${SUPABASE_URL}/rest/v1/${endpoint}`;
        const parsedUrl = url.parse(requestUrl);
        
        const options = {
            hostname: parsedUrl.hostname,
            port: parsedUrl.port || 443,
            path: parsedUrl.path + (parsedUrl.search || ''),
            method: method,
            headers: {
                'apikey': SERVICE_KEY,
                'Authorization': `Bearer ${SERVICE_KEY}`,
                'Content-Type': 'application/json',
                'Prefer': 'return=representation'
            }
        };

        if (data && method !== 'GET') {
            const postData = JSON.stringify(data);
            options.headers['Content-Length'] = Buffer.byteLength(postData);
        }

        const req = https.request(options, (res) => {
            let responseData = '';
            
            res.on('data', (chunk) => {
                responseData += chunk;
            });
            
            res.on('end', () => {
                try {
                    const result = JSON.parse(responseData);
                    if (res.statusCode >= 200 && res.statusCode < 300) {
                        resolve(result);
                    } else {
                        reject(result);
                    }
                } catch (e) {
                    if (res.statusCode >= 200 && res.statusCode < 300) {
                        resolve(responseData);
                    } else {
                        reject({ error: responseData, status: res.statusCode });
                    }
                }
            });
        });

        req.on('error', (err) => {
            reject(err);
        });

        if (data && method !== 'GET') {
            req.write(JSON.stringify(data));
        }
        
        req.end();
    });
}

async function updateTanks() {
    console.log('üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–æ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤...');

    try {
        // 1. –ê–ó–° ‚Ññ001 - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è: –†–µ–∑–µ—Ä–≤—É–∞—Ä –ê–ò-92 - –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –£–†–û–í–ï–ù–¨ + –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω—ã–π –¥–∞—Ç—á–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
        console.log('üìä –û–±–Ω–æ–≤–ª—è–µ–º –†–µ–∑–µ—Ä–≤—É–∞—Ä –ê–ò-92 - –ê–ó–° ‚Ññ001 - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è...');
        
        const tanks1 = await makeRequest('equipment?display_name=eq.' + encodeURIComponent('–†–µ–∑–µ—Ä–≤—É–∞—Ä –ê–ò-92 - –ê–ó–° ‚Ññ001 - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è') + '&select=*');
        
        if (tanks1.length > 0) {
            const tank1 = tanks1[0];
            const updatedParams1 = {
                ...tank1.params,
                '–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å (–ª)': 2500,
                '–ö–Ω–∏–∂–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫': 2400,
                '–ü–æ–¥—Ç–æ–≤–∞—Ä–Ω–∞—è –≤–æ–¥–∞': 8,
                '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞': 16,
                '–î–∞—Ç—á–∏–∫–∏': [
                    {"–Ω–∞–∑–≤–∞–Ω–∏–µ": "–£—Ä–æ–≤–µ–Ω—å", "—Å—Ç–∞—Ç—É—Å": "ok"}, 
                    {"–Ω–∞–∑–≤–∞–Ω–∏–µ": "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "—Å—Ç–∞—Ç—É—Å": "error"}
                ]
            };

            await makeRequest(`equipment?id=eq.${tank1.id}`, 'PATCH', { params: updatedParams1 });
            console.log('‚úÖ –ê–ò-92 - –ê–ó–° ‚Ññ001 –æ–±–Ω–æ–≤–ª–µ–Ω (–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å: 5%)');
        }

        // 2. –ê–ó–° ‚Ññ001 - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è: –†–µ–∑–µ—Ä–≤—É–∞—Ä –ê–ò-95 - –ù–û–†–ú–ê–õ–¨–ù–´–ô –£–†–û–í–ï–ù–¨ + –≤—ã—Å–æ–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞  
        console.log('üìä –û–±–Ω–æ–≤–ª—è–µ–º –†–µ–∑–µ—Ä–≤—É–∞—Ä –ê–ò-95 - –ê–ó–° ‚Ññ001 - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è...');
        
        const tanks2 = await makeRequest('equipment?display_name=eq.' + encodeURIComponent('–†–µ–∑–µ—Ä–≤—É–∞—Ä –ê–ò-95 - –ê–ó–° ‚Ññ001 - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è') + '&select=*');
        
        if (tanks2.length > 0) {
            const tank2 = tanks2[0];
            const updatedParams2 = {
                ...tank2.params,
                '–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å (–ª)': 32500,
                '–ö–Ω–∏–∂–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫': 32200,
                '–ü–æ–¥—Ç–æ–≤–∞—Ä–Ω–∞—è –≤–æ–¥–∞': 2,
                '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞': 42
            };

            await makeRequest(`equipment?id=eq.${tank2.id}`, 'PATCH', { params: updatedParams2 });
            console.log('‚úÖ –ê–ò-95 - –ê–ó–° ‚Ññ001 –æ–±–Ω–æ–≤–ª–µ–Ω (–ù–æ—Ä–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å: 65%, –≤—ã—Å–æ–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞)');
        }

        // 3. –ê–ó–° ‚Ññ002 - –°–µ–≤–µ—Ä–Ω–∞—è: –†–µ–∑–µ—Ä–≤—É–∞—Ä –ê–ò-92 - –ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ô –£–†–û–í–ï–ù–¨ + –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –≤–æ–¥—ã
        console.log('üìä –û–±–Ω–æ–≤–ª—è–µ–º –†–µ–∑–µ—Ä–≤—É–∞—Ä –ê–ò-92 - –ê–ó–° ‚Ññ002 - –°–µ–≤–µ—Ä–Ω–∞—è...');
        
        const tanks3 = await makeRequest('equipment?display_name=eq.' + encodeURIComponent('–†–µ–∑–µ—Ä–≤—É–∞—Ä –ê–ò-92 - –ê–ó–° ‚Ññ002 - –°–µ–≤–µ—Ä–Ω–∞—è') + '&select=*');
        
        if (tanks3.length > 0) {
            const tank3 = tanks3[0];
            const updatedParams3 = {
                ...tank3.params,
                '–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å (–ª)': 7200,
                '–ö–Ω–∏–∂–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫': 7100,
                '–ü–æ–¥—Ç–æ–≤–∞—Ä–Ω–∞—è –≤–æ–¥–∞': 12,
                '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞': 15
            };

            await makeRequest(`equipment?id=eq.${tank3.id}`, 'PATCH', { params: updatedParams3 });
            console.log('‚úÖ –ê–ò-92 - –ê–ó–° ‚Ññ002 –æ–±–Ω–æ–≤–ª–µ–Ω (–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å: 18%, –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –≤–æ–¥—ã)');
        }

        // 4. –ê–ó–° ‚Ññ002 - –°–µ–≤–µ—Ä–Ω–∞—è: –†–µ–∑–µ—Ä–≤—É–∞—Ä –ê–ò-95 - –ü–û–õ–ù–´–ô —Ä–µ–∑–µ—Ä–≤—É–∞—Ä
        console.log('üìä –û–±–Ω–æ–≤–ª—è–µ–º –†–µ–∑–µ—Ä–≤—É–∞—Ä –ê–ò-95 - –ê–ó–° ‚Ññ002 - –°–µ–≤–µ—Ä–Ω–∞—è...');
        
        const tanks4 = await makeRequest('equipment?display_name=eq.' + encodeURIComponent('–†–µ–∑–µ—Ä–≤—É–∞—Ä –ê–ò-95 - –ê–ó–° ‚Ññ002 - –°–µ–≤–µ—Ä–Ω–∞—è') + '&select=*');
        
        if (tanks4.length > 0) {
            const tank4 = tanks4[0];
            const updatedParams4 = {
                ...tank4.params,
                '–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å (–ª)': 38000,
                '–ö–Ω–∏–∂–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫': 37800,
                '–ü–æ–¥—Ç–æ–≤–∞—Ä–Ω–∞—è –≤–æ–¥–∞': 0
            };

            await makeRequest(`equipment?id=eq.${tank4.id}`, 'PATCH', { params: updatedParams4 });
            console.log('‚úÖ –ê–ò-95 - –ê–ó–° ‚Ññ002 –æ–±–Ω–æ–≤–ª–µ–Ω (–ü–æ–ª–Ω—ã–π —Ä–µ–∑–µ—Ä–≤—É–∞—Ä: 95%)');
        }

        // 5. –ê–ó–° ‚Ññ002 - –°–µ–≤–µ—Ä–Ω–∞—è: –†–µ–∑–µ—Ä–≤—É–∞—Ä –î–∏–∑–µ–ª—å - –°–†–ï–î–ù–ò–ô –£–†–û–í–ï–ù–¨ + –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        console.log('üìä –û–±–Ω–æ–≤–ª—è–µ–º –†–µ–∑–µ—Ä–≤—É–∞—Ä –î–∏–∑–µ–ª—å - –ê–ó–° ‚Ññ002 - –°–µ–≤–µ—Ä–Ω–∞—è...');
        
        const tanks5 = await makeRequest('equipment?display_name=eq.' + encodeURIComponent('–†–µ–∑–µ—Ä–≤—É–∞—Ä –î–∏–∑–µ–ª—å - –ê–ó–° ‚Ññ002 - –°–µ–≤–µ—Ä–Ω–∞—è') + '&select=*');
        
        if (tanks5.length > 0) {
            const tank5 = tanks5[0];
            const updatedParams5 = {
                ...tank5.params,
                '–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å (–ª)': 20250,
                '–ö–Ω–∏–∂–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫': 20100,
                '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π': {
                    "–≤–∫–ª—é—á–µ–Ω—ã": false,
                    "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–ª–∏–≤–µ": false,
                    "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É—Ä–æ–≤–Ω–µ": false
                }
            };

            await makeRequest(`equipment?id=eq.${tank5.id}`, 'PATCH', { params: updatedParams5 });
            console.log('‚úÖ –î–∏–∑–µ–ª—å - –ê–ó–° ‚Ññ002 –æ–±–Ω–æ–≤–ª–µ–Ω (–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å: 45%, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã)');
        }

        console.log('üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

    } catch (error) {
        console.error('üí• –û—à–∏–±–∫–∞:', error);
    }
}

updateTanks();