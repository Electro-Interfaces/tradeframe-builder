/**
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤—è–∑–∫–∏ –¢–†–ö –∫ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞–º –≤ –¥–µ–º–æ —Å–µ—Ç–∏ –ê–ó–°
 * –ö–∞–∂–¥–∞—è –ê–ó–° –ø–æ–ª—É—á–∞–µ—Ç —Å–≤–æ–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –¢–†–ö
 */

import https from 'https';
import url from 'url';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const SUPABASE_URL = 'https://tohtryzyffcebtyvkxwh.supabase.co';
const SERVICE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRvaHRyeXp5ZmZjZWJ0eXZreHdoIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Njg3NTQ0OCwiZXhwIjoyMDcyNDUxNDQ4fQ.kN6uF9YhJzbzu2ugHRQCyzuNOwawsTDtwelGO0uCjyY';

// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
function makeRequest(options, postData = null) {
    return new Promise((resolve, reject) => {
        const req = https.request(options, (res) => {
            let data = '';
            res.on('data', (chunk) => data += chunk);
            res.on('end', () => {
                try {
                    if (res.statusCode >= 200 && res.statusCode < 300) {
                        resolve(data ? JSON.parse(data) : null);
                    } else {
                        reject(new Error(`HTTP ${res.statusCode}: ${data}`));
                    }
                } catch (error) {
                    reject(error);
                }
            });
        });

        req.on('error', reject);
        if (postData) req.write(postData);
        req.end();
    });
}

// –°—Ö–µ–º–∞ –ª–æ–≥–∏—á–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¢–†–ö –ø–æ –ê–ó–°
const trkAssignments = {
    'point1': { // –ê–ó–° ‚Ññ001 - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è (—Ñ–ª–∞–≥–º–∞–Ω—Å–∫–∞—è, –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –¢–†–ö)
        name: '–ê–ó–° ‚Ññ001 - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è',
        trks: {
            '–ê–ò-92': [{ id: 101, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-101' }, { id: 102, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-102' }],
            '–ê–ò-95': [{ id: 103, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-103' }, { id: 104, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-104' }],
            '–ê–ò-98': [{ id: 105, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-105' }],
            '–î–∏–∑–µ–ª—å': [{ id: 106, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-106' }],
            'default': [{ id: 107, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-107' }]
        }
    },
    'point2': { // –ê–ó–° ‚Ññ002 - –°–µ–≤–µ—Ä–Ω–∞—è (–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è, –∞–∫—Ü–µ–Ω—Ç –Ω–∞ –¥–∏–∑–µ–ª—å)
        name: '–ê–ó–° ‚Ññ002 - –°–µ–≤–µ—Ä–Ω–∞—è', 
        trks: {
            '–ê–ò-92': [{ id: 201, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-201' }],
            '–ê–ò-95': [{ id: 202, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-202' }],
            '–î–∏–∑–µ–ª—å': [{ id: 203, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-203' }, { id: 204, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-204' }],
            'default': [{ id: 205, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-205' }]
        }
    },
    'point3': { // –ê–ó–° ‚Ññ003 - –Æ–∂–Ω–∞—è (—Å–µ–º–µ–π–Ω–∞—è, —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ —Ç–æ–ø–ª–∏–≤–∞)
        name: '–ê–ó–° ‚Ññ003 - –Æ–∂–Ω–∞—è',
        trks: {
            '–ê–ò-92': [{ id: 301, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-301' }],
            '–ê–ò-95': [{ id: 302, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-302' }],
            '–ê–ò-98': [{ id: 303, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-303' }],
            '–î–∏–∑–µ–ª—å': [{ id: 304, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-304' }],
            'default': [{ id: 305, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-305' }]
        }
    },
    'point5': { // –ê–ó–° ‚Ññ005 - –ü—Ä–æ–º–∑–æ–Ω–∞ (–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è, –±–æ–ª—å—à–µ –¥–∏–∑–µ–ª—è)
        name: '–ê–ó–° ‚Ññ005 - –ü—Ä–æ–º–∑–æ–Ω–∞',
        trks: {
            '–ê–ò-92': [{ id: 501, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-501' }],
            '–ê–ò-95': [{ id: 502, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-502' }],
            '–ê–ò-98': [{ id: 503, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-503' }],
            '–î–∏–∑–µ–ª—å': [{ id: 504, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-504' }, { id: 505, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-505' }],
            'default': [{ id: 506, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-506' }]
        }
    },
    'point6': { // –ê–ó–° ‚Ññ006 - –û–∫—Ä—É–∂–Ω–∞—è (–∫–æ–º–ø–∞–∫—Ç–Ω–∞—è)
        name: '–ê–ó–° ‚Ññ006 - –û–∫—Ä—É–∂–Ω–∞—è',
        trks: {
            '–ê–ò-92': [{ id: 601, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-601' }],
            '–ê–ò-95': [{ id: 602, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-602' }],
            '–ê–ò-98': [{ id: 603, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-603' }],
            '–î–∏–∑–µ–ª—å': [{ id: 604, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-604' }],
            '–î–∏–∑–µ–ª—å –∑–∏–º–Ω–∏–π': [{ id: 605, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-605' }],
            'default': [{ id: 606, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-606' }]
        }
    }
};

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¢–†–ö –¥–ª—è —Ç–æ–ø–ª–∏–≤–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ê–ó–°
function getTrksForFuel(tradingPoint, fuelType) {
    const azs = trkAssignments[tradingPoint];
    if (!azs) return [{ id: 999, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-999' }];
    
    // –ò—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Ç–æ–ø–ª–∏–≤–∞
    if (azs.trks[fuelType]) {
        return azs.trks[fuelType];
    }
    
    // –î–ª—è –¥–∏–∑–µ–ª—å–Ω—ã—Ö —Ç–∏–ø–æ–≤
    if (fuelType.includes('–î–∏–∑–µ–ª—å') && azs.trks['–î–∏–∑–µ–ª—å']) {
        return azs.trks['–î–∏–∑–µ–ª—å'];
    }
    
    // –î–ª—è –±–µ–Ω–∑–∏–Ω–æ–≤—ã—Ö —Ç–∏–ø–æ–≤
    if (fuelType.includes('–ê–ò-') && azs.trks['–ê–ò-92']) {
        return azs.trks['–ê–ò-92'];
    }
    
    // –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –¢–†–ö
    return azs.trks['default'] || [{ id: 999, –Ω–∞–∑–≤–∞–Ω–∏–µ: '–¢–†–ö-999' }];
}

async function fixTrkAssignments() {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤—è–∑–∫–∏ –¢–†–ö –∫ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞–º...');
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä—ã –∏–∑ equipment
        const equipmentUrl = `${SUPABASE_URL}/rest/v1/equipment?system_type=eq.fuel_tank&select=*`;
        const equipmentOptions = {
            ...url.parse(equipmentUrl),
            method: 'GET',
            headers: {
                'apikey': SERVICE_KEY,
                'Authorization': `Bearer ${SERVICE_KEY}`,
                'Content-Type': 'application/json'
            }
        };

        const tanks = await makeRequest(equipmentOptions);
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–æ–≤: ${tanks.length}`);

        let updatedCount = 0;

        for (const tank of tanks) {
            const params = tank.params || {};
            const tradingPointCode = params["–¢–æ—Ä–≥–æ–≤–∞—è —Ç–æ—á–∫–∞"] || 'default';
            const fuelType = params["–¢–∏–ø —Ç–æ–ø–ª–∏–≤–∞"] || '–ê–ò-92';
            
            // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¢–†–ö –¥–ª—è —ç—Ç–æ–≥–æ —Ç–æ–ø–ª–∏–≤–∞ –Ω–∞ —ç—Ç–æ–π –ê–ó–°
            const correctTrks = getTrksForFuel(tradingPointCode, fuelType);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞
            const updatedParams = {
                ...params,
                "–°–≤—è–∑–∞–Ω–Ω—ã–µ –Ω–∞—Å–æ—Å—ã": correctTrks
            };

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º PATCH –∑–∞–ø—Ä–æ—Å
            const updateUrl = `${SUPABASE_URL}/rest/v1/equipment?id=eq.${tank.id}`;
            const updateOptions = {
                ...url.parse(updateUrl),
                method: 'PATCH',
                headers: {
                    'apikey': SERVICE_KEY,
                    'Authorization': `Bearer ${SERVICE_KEY}`,
                    'Content-Type': 'application/json'
                }
            };

            const updateData = JSON.stringify({
                params: updatedParams,
                updated_at: new Date().toISOString()
            });

            await makeRequest(updateOptions, updateData);
            updatedCount++;
            
            // –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            const azsName = trkAssignments[tradingPointCode]?.name || tradingPointCode;
            const trkNames = correctTrks.map(t => t.–Ω–∞–∑–≤–∞–Ω–∏–µ).join(', ');
            console.log(`   üîß ${tank.display_name}: ${trkNames}`);
            
            // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
            await new Promise(resolve => setTimeout(resolve, 100));
        }

        console.log(`\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!`);
        console.log(`üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–æ–≤: ${updatedCount}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É –ø–æ –ê–ó–°
        console.log(`\nüìã –ù–æ–≤–∞—è —Å—Ö–µ–º–∞ –ø—Ä–∏–≤—è–∑–∫–∏ –¢–†–ö –ø–æ –ê–ó–°:`);
        Object.entries(trkAssignments).forEach(([code, azs]) => {
            console.log(`\nüè¢ ${azs.name}:`);
            Object.entries(azs.trks).forEach(([fuel, trks]) => {
                if (fuel !== 'default') {
                    console.log(`   ‚õΩ ${fuel}: ${trks.map(t => t.–Ω–∞–∑–≤–∞–Ω–∏–µ).join(', ')}`);
                }
            });
        });
        
        return true;

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¢–†–ö:', error.message);
        return false;
    }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (process.argv[1].endsWith('fix_demo_trk_assignments.js')) {
    fixTrkAssignments()
        .then(success => {
            if (success) {
                console.log('\nüéØ –ü—Ä–∏–≤—è–∑–∫–∞ –¢–†–ö –∫ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞–º —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!');
                console.log('üîÑ –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–æ–≤, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è');
                console.log('üìç –¢–µ–ø–µ—Ä—å –∫–∞–∂–¥–∞—è –ê–ó–° –∏–º–µ–µ—Ç —Å–≤–æ–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –¢–†–ö');
                process.exit(0);
            } else {
                console.log('\nüí• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏');
                process.exit(1);
            }
        })
        .catch(error => {
            console.error('üíÄ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
            process.exit(1);
        });
}

export { fixTrkAssignments };