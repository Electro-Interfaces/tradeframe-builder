/**
 * üßπ –ü—Ä—è–º–∞—è –æ—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü—ã equipment –æ—Ç fuel_tank –∑–∞–ø–∏—Å–µ–π
 */

import { supabaseService } from './src/services/supabaseServiceClient.js';

async function cleanupEquipmentTanks() {
    console.log('üßπ –ù–ê–ß–ò–ù–ê–ï–ú –û–ß–ò–°–¢–ö–£ –¢–ê–ë–õ–ò–¶–´ EQUIPMENT –û–¢ FUEL_TANK –ó–ê–ü–ò–°–ï–ô...');
    
    try {
        // 1. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å
        console.log('üîç –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ fuel_tank –∑–∞–ø–∏—Å–∏...');
        const { data: existingRecords, error: selectError } = await supabaseService
            .from('equipment')
            .select('*')
            .eq('system_type', 'fuel_tank');

        if (selectError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞–ø–∏—Å–µ–π:', selectError);
            return;
        }

        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${existingRecords.length} –∑–∞–ø–∏—Å–µ–π fuel_tank –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è`);
        
        if (existingRecords.length === 0) {
            console.log('‚úÖ –ó–∞–ø–∏—Å–∏ fuel_tank –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - –æ—á–∏—Å—Ç–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
            return;
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –∏–º–µ–Ω–Ω–æ –±—É–¥–µ–º —É–¥–∞–ª—è—Ç—å
        existingRecords.forEach((record, index) => {
            console.log(`   ${index + 1}. ${record.display_name || record.name} (ID: ${record.id})`);
        });

        // 2. –£–¥–∞–ª—è–µ–º –≤—Å–µ fuel_tank –∑–∞–ø–∏—Å–∏
        console.log('\nüóëÔ∏è –®–∞–≥ 2: –£–¥–∞–ª—è–µ–º –≤—Å–µ fuel_tank –∑–∞–ø–∏—Å–∏...');
        const { error: deleteError } = await supabaseService
            .from('equipment')
            .delete()
            .eq('system_type', 'fuel_tank');

        if (deleteError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π:', deleteError);
            return;
        }

        console.log(`‚úÖ –£–°–ü–ï–®–ù–û –£–î–ê–õ–ï–ù–û ${existingRecords.length} –∑–∞–ø–∏—Å–µ–π fuel_tank –∏–∑ —Ç–∞–±–ª–∏—Ü—ã equipment`);

        // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        console.log('\n‚úÖ –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—á–∏—Å—Ç–∫–∏...');
        const { data: remainingRecords, error: checkError } = await supabaseService
            .from('equipment')
            .select('count')
            .eq('system_type', 'fuel_tank');

        if (checkError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', checkError);
            return;
        }

        console.log('‚úÖ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!');
        console.log('üéâ –¢–µ–ø–µ—Ä—å —Å–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –≤–Ω–µ—à–Ω–µ–º—É API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–æ–≤');
        console.log('üîÑ –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: http://localhost:3005/point/tanks');

    } catch (error) {
        console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ:', error);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É
cleanupEquipmentTanks();