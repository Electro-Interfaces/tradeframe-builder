/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
 */

import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://tohtryzyffcebtyvkxwh.supabase.co';
const serviceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRvaHRyeXp5ZmZjZWJ0eXZreHdoIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Njg3NTQ0OCwiZXhwIjoyMDcyNDUxNDQ4fQ.kN6uF9YhJzbzu2ugHRQCyzuNOwawsTDtwelGO0uCjyY';

const supabase = createClient(supabaseUrl, serviceKey);

async function testPreferencesSystem() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π...');
  
  const testUserId = '11111111-2222-3333-4444-555555555555';
  let testsPassed = 0;
  let totalTests = 0;
  
  try {
    // –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
    totalTests++;
    console.log('\nüìù –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è selected_network');
    
    const { data: insertData, error: insertError } = await supabase
      .from('user_preferences')
      .insert({
        user_id: testUserId,
        preference_key: 'selected_network',
        preference_value: '15'
      })
      .select()
      .single();
    
    if (insertError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è:', insertError.message);
    } else {
      console.log('‚úÖ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:', insertData);
      testsPassed++;
    }
    
    // –¢–µ—Å—Ç 2: –ß—Ç–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
    totalTests++;
    console.log('\nüìñ –¢–µ—Å—Ç 2: –ß—Ç–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è');
    
    const { data: selectData, error: selectError } = await supabase
      .from('user_preferences')
      .select('*')
      .eq('user_id', testUserId)
      .eq('preference_key', 'selected_network')
      .single();
    
    if (selectError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è:', selectError.message);
    } else {
      console.log('‚úÖ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–æ:', selectData);
      if (selectData.preference_value === '15') {
        testsPassed++;
        console.log('‚úÖ –ó–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ');
      } else {
        console.log('‚ùå –ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ');
      }
    }
    
    // –¢–µ—Å—Ç 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
    totalTests++;
    console.log('\nüîÑ –¢–µ—Å—Ç 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è');
    
    const { data: updateData, error: updateError } = await supabase
      .from('user_preferences')
      .upsert({
        user_id: testUserId,
        preference_key: 'selected_network',
        preference_value: 'net1'
      }, {
        onConflict: 'user_id,preference_key'
      })
      .select()
      .single();
    
    if (updateError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', updateError.message);
    } else {
      console.log('‚úÖ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ:', updateData);
      if (updateData.preference_value === 'net1') {
        testsPassed++;
        console.log('‚úÖ –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ');
      } else {
        console.log('‚ùå –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ');
      }
    }
    
    // –¢–µ—Å—Ç 4: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
    totalTests++;
    console.log('\n‚ûï –¢–µ—Å—Ç 4: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ selected_trading_point');
    
    const { data: insertData2, error: insertError2 } = await supabase
      .from('user_preferences')
      .insert({
        user_id: testUserId,
        preference_key: 'selected_trading_point',
        preference_value: 'all'
      })
      .select()
      .single();
    
    if (insertError2) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è:', insertError2.message);
    } else {
      console.log('‚úÖ –í—Ç–æ—Ä–æ–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:', insertData2);
      testsPassed++;
    }
    
    // –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    totalTests++;
    console.log('\nüìã –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    
    const { data: allPrefs, error: allPrefsError } = await supabase
      .from('user_preferences')
      .select('*')
      .eq('user_id', testUserId);
    
    if (allPrefsError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π:', allPrefsError.message);
    } else {
      console.log('‚úÖ –í—Å–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', allPrefs);
      if (allPrefs.length >= 2) {
        testsPassed++;
        console.log('‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ');
      } else {
        console.log('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π');
      }
    }
    
    // –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
    totalTests++;
    console.log('\nüîí –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è');
    
    const { data: duplicateData, error: duplicateError } = await supabase
      .from('user_preferences')
      .insert({
        user_id: testUserId,
        preference_key: 'selected_network', // –î—É–±–ª–∏–∫–∞—Ç
        preference_value: 'duplicate_test'
      });
    
    if (duplicateError && duplicateError.code === '23505') {
      console.log('‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', duplicateError.message);
      testsPassed++;
    } else if (duplicateError) {
      console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', duplicateError.message);
    } else {
      console.log('‚ùå –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç - —Å–æ–∑–¥–∞–ª—Å—è –¥—É–±–ª–∏–∫–∞—Ç');
    }
    
    // –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    const { error: deleteError } = await supabase
      .from('user_preferences')
      .delete()
      .eq('user_id', testUserId);
    
    if (deleteError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏:', deleteError.message);
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã');
    }
    
    // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    console.log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: ${testsPassed}/${totalTests}`);
    console.log(`üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ${((testsPassed/totalTests)*100).toFixed(1)}%`);
    
    if (testsPassed === totalTests) {
      console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.');
    } else {
      console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞–±–ª–∏—Ü—ã.');
    }
    
  } catch (error) {
    console.log('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

async function testRLSPolicies() {
  console.log('\nüîê –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ RLS (Row Level Security)...');
  
  // –≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  console.log('‚ö†Ô∏è  –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è RLS –Ω—É–∂–µ–Ω —Ä–µ–∞–ª—å–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç–æ–∫–µ–Ω');
  console.log('üí° –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ø–æ–ª–∏—Ç–∏–∫–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø –ø–æ auth.uid()');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
async function runAllTests() {
  await testPreferencesSystem();
  await testRLSPolicies();
  
  console.log('\nüöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('üì± –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:');
  console.log('1. –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ç—å –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ');
  console.log('2. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—Ä–≥–æ–≤—É—é —Ç–æ—á–∫—É');
  console.log('3. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É');
  console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤—ã–±–æ—Ä —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è');
}

runAllTests().catch(console.error);