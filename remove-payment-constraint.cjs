/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è payment_method
 * –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ online_order
 */

const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://tohtryzyffcebtyvkxwh.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRvaHRyeXp5ZmZjZWJ0eXZreHdoIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Njg3NTQ0OCwiZXhwIjoyMDcyNDUxNDQ4fQ.kN6uF9YhJzbzu2ugHRQCyzuNOwawsTDtwelGO0uCjyY';

const supabase = createClient(supabaseUrl, supabaseKey);

async function removePaymentConstraint() {
  console.log('üöÄ –£–¥–∞–ª—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ payment_method –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º RPC —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è constraint
    console.log('üìù –°–æ–∑–¥–∞–µ–º RPC —Ñ—É–Ω–∫—Ü–∏—é...');
    
    const { data: rpcResult, error: rpcError } = await supabase.rpc('exec_sql', {
      sql: `
        CREATE OR REPLACE FUNCTION remove_payment_constraint()
        RETURNS text
        LANGUAGE plpgsql
        SECURITY DEFINER
        AS $$
        BEGIN
            -- –£–¥–∞–ª—è–µ–º constraint
            ALTER TABLE operations DROP CONSTRAINT IF EXISTS operations_payment_method_check;
            RETURN 'Payment method constraint removed successfully';
        EXCEPTION
            WHEN OTHERS THEN
                RETURN 'Error: ' || SQLERRM;
        END;
        $$;
      `
    });

    if (rpcError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è RPC —Ñ—É–Ω–∫—Ü–∏–∏:', rpcError);
      
      // –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL
      console.log('üîÑ –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL...');
      
      const { error: directError } = await supabase.from('operations').select('id').limit(1);
      if (!directError) {
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å constraint —á–µ—Ä–µ–∑ SQL...');
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ SQL –∑–∞–ø—Ä–æ—Å
        const { data, error } = await supabase
          .from('operations')
          .select('*')
          .limit(0); // –ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞
          
        console.log('üìã –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ, constraint –Ω—É–∂–Ω–æ —É–¥–∞–ª—è—Ç—å —á–µ—Ä–µ–∑ Supabase Dashboard');
        return false;
      }
    } else {
      console.log('‚úÖ RPC —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞');
      
      // –í—ã–ø–æ–ª–Ω—è–µ–º RPC —Ñ—É–Ω–∫—Ü–∏—é
      const { data: execResult, error: execError } = await supabase.rpc('remove_payment_constraint');
      
      if (execError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è RPC:', execError);
        return false;
      } else {
        console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:', execResult);
      }
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–æ constraint —É–¥–∞–ª–µ–Ω
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ online_order...');
    
    const { data: testData, error: testError } = await supabase
      .from('operations')
      .insert({
        id: `TEST-ONLINE-${Date.now()}`,
        operation_type: 'sale',
        status: 'completed',
        start_time: '2025-08-31T12:00:00Z',
        payment_method: 'online_order',
        details: 'Test online order after constraint removal',
        created_at: '2025-08-31T12:00:00Z',
        updated_at: '2025-08-31T12:00:00Z'
      })
      .select();

    if (testError) {
      console.error('‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª:', testError.message);
      console.log('‚ö†Ô∏è Constraint –≤—Å–µ –µ—â–µ –∞–∫—Ç–∏–≤–µ–Ω, —Ç—Ä–µ–±—É–µ—Ç—Å—è —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Dashboard');
      return false;
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª! online_order —Ç–µ–ø–µ—Ä—å —Ä–∞–∑—Ä–µ—à–µ–Ω');
      
      // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
      await supabase
        .from('operations')
        .delete()
        .eq('id', testData[0].id);
        
      console.log('üßπ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞');
      return true;
    }
    
  } catch (error) {
    console.error('üí• –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è SQL –∫–æ–º–∞–Ω–¥—ã –¥–ª—è Dashboard
function createDashboardSQL() {
  console.log('\nüìã SQL –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è Supabase Dashboard:');
  console.log('‚îÄ'.repeat(60));
  console.log(`-- –£–¥–∞–ª–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è payment_method
ALTER TABLE operations 
DROP CONSTRAINT IF EXISTS operations_payment_method_check;

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ
SELECT conname, consrc 
FROM pg_constraint 
WHERE conrelid = (SELECT oid FROM pg_class WHERE relname = 'operations') 
AND conname = 'operations_payment_method_check';`);
  console.log('‚îÄ'.repeat(60));
  console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard ‚Üí SQL Editor');
  console.log('2. –í—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤—ã—à–µ');
  console.log('3. –ù–∞–∂–º–∏—Ç–µ RUN');
  console.log('4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏\n');
}

// –ó–∞–ø—É—Å–∫
removePaymentConstraint().then((success) => {
  if (success) {
    console.log('üéâ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ payment_method —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!');
    console.log('‚úÖ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å online_order');
  } else {
    console.log('‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Dashboard');
    createDashboardSQL();
  }
  process.exit(0);
}).catch(err => {
  console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', err);
  createDashboardSQL();
  process.exit(1);
});