#!/usr/bin/env node

/**
 * –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞ –≤ —Å–∏—Å—Ç–µ–º–µ
 */

const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://tohtryzyffcebtyvkxwh.supabase.co';
const serviceRoleKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRvaHRyeXp5ZmZjZWJ0eXZreHdoIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Njg3NTQ0OCwiZXhwIjoyMDcyNDUxNDQ4fQ.kN6uF9YhJzbzu2ugHRQCyzuNOwawsTDtwelGO0uCjyY';

const supabase = createClient(supabaseUrl, serviceRoleKey, {
  auth: { autoRefreshToken: false, persistSession: false }
});

async function checkBotConfiguration() {
  console.log('üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram –±–æ—Ç–∞...');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã
    console.log('\nüìä 1. –í–°–ï –ó–ê–ü–ò–°–ò –í SYSTEM_CONFIG:');
    const { data: allConfigs, error: allError } = await supabase
      .from('system_config')
      .select('*')
      .order('config_key');
    
    if (allError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π:', allError.message);
    } else {
      console.log(`   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${allConfigs?.length || 0}`);
      allConfigs?.forEach(config => {
        console.log(`   ‚Ä¢ ${config.config_key} (${config.config_type})`);
        if (config.config_key.includes('telegram') || config.config_key.includes('bot')) {
          console.log(`     üìù ${config.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}`);
          console.log(`     üíæ ${JSON.stringify(config.config_value).substring(0, 100)}...`);
        }
      });
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API
    console.log('\nüåê 2. –ù–ê–°–¢–†–û–ô–ö–ò API –ò –ò–ù–¢–ï–ì–†–ê–¶–ò–ô:');
    const { data: apiSettings, error: apiError } = await supabase
      .from('system_config')
      .select('*')
      .eq('config_key', 'api_settings')
      .single();
    
    if (apiError && apiError.code !== 'PGRST116') {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è api_settings:', apiError.message);
    } else if (apiSettings) {
      console.log('   ‚úÖ –ù–∞–π–¥–µ–Ω—ã api_settings:');
      console.log(`   üìù ${apiSettings.description}`);
      
      const apiValue = apiSettings.config_value;
      console.log('\n   üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ api_settings:');
      
      if (apiValue && typeof apiValue === 'object') {
        Object.keys(apiValue).forEach(key => {
          console.log(`   ‚Ä¢ ${key}:`, typeof apiValue[key]);
          if (key.toLowerCase().includes('telegram') || key.toLowerCase().includes('bot')) {
            console.log(`     ü§ñ TELEGRAM –ù–ê–°–¢–†–û–ô–ö–ê:`, JSON.stringify(apiValue[key], null, 2));
          }
        });
      }
    } else {
      console.log('   ‚ùå api_settings –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏
    console.log('\nüîÑ 3. –ù–ê–°–¢–†–û–ô–ö–ò –û–ë–ú–ï–ù–ê –î–ê–ù–ù–´–ú–ò:');
    const { data: exchangeSettings, error: exchangeError } = await supabase
      .from('system_config')
      .select('*')
      .or('config_key.ilike.%exchange%,config_key.ilike.%integration%,config_type.eq.integration')
      .order('config_key');
    
    if (exchangeError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–±–º–µ–Ω–∞:', exchangeError.message);
    } else if (exchangeSettings?.length) {
      console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–±–º–µ–Ω–∞: ${exchangeSettings.length}`);
      exchangeSettings.forEach(setting => {
        console.log(`   ‚Ä¢ ${setting.config_key}`);
        console.log(`     –¢–∏–ø: ${setting.config_type}`);
        console.log(`     –û–ø–∏—Å–∞–Ω–∏–µ: ${setting.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}`);
        
        if (setting.config_value && typeof setting.config_value === 'object') {
          const value = setting.config_value;
          if (value.telegram || value.bot || value.telegramBot) {
            console.log(`     ü§ñ TELEGRAM –≤ –æ–±–º–µ–Ω–µ –¥–∞–Ω–Ω—ã–º–∏:`, JSON.stringify(value, null, 2));
          }
        }
      });
    } else {
      console.log('   ‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }
    
    // 4. –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    console.log('\nüîç 4. –ü–û–ò–°–ö –ü–û –ö–õ–Æ–ß–ï–í–´–ú –°–õ–û–í–ê–ú:');
    const keywords = ['telegram', 'bot', '8162072057', 'TradeControl', 'DW_Export'];
    
    for (const keyword of keywords) {
      const { data: keywordResults } = await supabase
        .from('system_config')
        .select('*')
        .or(`config_key.ilike.%${keyword}%,config_value::text.ilike.%${keyword}%,description.ilike.%${keyword}%`);
      
      if (keywordResults?.length) {
        console.log(`   üîë "${keyword}" –Ω–∞–π–¥–µ–Ω–æ –≤ ${keywordResults.length} –∑–∞–ø–∏—Å—è—Ö:`);
        keywordResults.forEach(result => {
          console.log(`     ‚Ä¢ ${result.config_key}: ${result.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}`);
        });
      }
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    console.log('\n‚öôÔ∏è 5. –°–ò–°–¢–ï–ú–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò:');
    const { data: systemSettings } = await supabase
      .from('system_config')
      .select('*')
      .eq('config_type', 'system')
      .order('config_key');
    
    if (systemSettings?.length) {
      console.log(`   ‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: ${systemSettings.length}`);
      systemSettings.forEach(setting => {
        if (setting.config_key.includes('telegram') || setting.config_key.includes('bot')) {
          console.log(`   ü§ñ ${setting.config_key}: ${setting.description}`);
        }
      });
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

checkBotConfiguration().then(() => {
  console.log('\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:');
  console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–¥–µ–ª "–û–±–º–µ–Ω –¥–∞–Ω–Ω—ã–º–∏" –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ');
  console.log('2. –ù–∞–π–¥–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞');
  console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω 8162072057:*** –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω');
  console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ username –±–æ—Ç–∞ @TradeControl_DW_Export_Bot');
  process.exit(0);
}).catch(console.error);