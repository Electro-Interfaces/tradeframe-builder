/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–æ–≤ –¥–ª—è –ê–ó–° 4 –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 */

import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = 'https://tohtryzyffcebtyvkxwh.supabase.co';
const SUPABASE_SERVICE_ROLE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRvaHRyeXp5ZmZjZWJ0eXZreHdoIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Njg3NTQ0OCwiZXhwIjoyMDcyNDUxNDQ4fQ.kN6uF9YhJzbzu2ugHRQCyzuNOwawsTDtwelGO0uCjyY';

const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY);

const TARGET_TRADING_POINT_ID = '6969b08d-1cbe-45c2-ae9c-8002c7022b59'; // –ê–ó–° 4

async function checkTanksData() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑–µ—Ä–≤—É–∞—Ä—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ê–ó–° 4');
  console.log('ID —Ç–æ—Ä–≥–æ–≤–æ–π —Ç–æ—á–∫–∏:', TARGET_TRADING_POINT_ID);
  console.log('================================\n');
  
  // –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–∞–±–ª–∏—Ü—É tanks
  console.log('üìä –¢–ê–ë–õ–ò–¶–ê: tanks');
  console.log('------------------');
  
  const { data: tanksData, error: tanksError } = await supabase
    .from('tanks')
    .select('*')
    .eq('trading_point_id', TARGET_TRADING_POINT_ID);
    
  if (tanksError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ tanks:', tanksError);
  } else {
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${tanksData?.length || 0}`);
    if (tanksData && tanksData.length > 0) {
      tanksData.forEach((tank, i) => {
        console.log(`  ${i+1}. ${tank.name} | ID: ${tank.id}`);
        console.log(`     - –¢–∏–ø —Ç–æ–ø–ª–∏–≤–∞: ${tank.fuelType || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`     - –°—Ç–∞—Ç—É—Å: ${tank.status || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`     - trading_point_id: ${tank.trading_point_id}`);
      });
    }
  }
  
  console.log('\nüìä –¢–ê–ë–õ–ò–¶–ê: equipment (fuel_tank)');
  console.log('-----------------------------------');
  
  // –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–∞–±–ª–∏—Ü—É equipment
  const { data: equipData, error: equipError } = await supabase
    .from('equipment')
    .select('*')
    .eq('trading_point_id', TARGET_TRADING_POINT_ID)
    .eq('system_type', 'fuel_tank');
    
  if (equipError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ equipment:', equipError);
  } else {
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${equipData?.length || 0}`);
    if (equipData && equipData.length > 0) {
      equipData.forEach((equip, i) => {
        console.log(`  ${i+1}. ${equip.name} | ${equip.display_name || '–Ω–µ—Ç display_name'}`);
        console.log(`     - ID: ${equip.id}`);
        console.log(`     - trading_point_id: ${equip.trading_point_id}`);
        console.log(`     - system_type: ${equip.system_type}`);
        console.log(`     - status: ${equip.status || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
      });
    }
  }
  
  // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–æ–π —Ç–æ—á–∫–∏
  console.log('\nüìä –¢–û–†–ì–û–í–ê–Ø –¢–û–ß–ö–ê');
  console.log('------------------');
  
  const { data: tradingPointData, error: tradingPointError } = await supabase
    .from('trading_points')
    .select('*')
    .eq('id', TARGET_TRADING_POINT_ID);
    
  if (tradingPointError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ trading_points:', tradingPointError);
  } else {
    if (tradingPointData && tradingPointData.length > 0) {
      const tp = tradingPointData[0];
      console.log(`–ù–∞–∑–≤–∞–Ω–∏–µ: ${tp.name}`);
      console.log(`–ö–æ–¥: ${tp.code || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
      console.log(`External ID: ${tp.external_id || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
      console.log(`Network ID: ${tp.network_id}`);
    } else {
      console.log('‚ùå –¢–æ—Ä–≥–æ–≤–∞—è —Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
    }
  }
}

checkTanksData().catch(console.error);