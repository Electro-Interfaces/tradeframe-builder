import React, { useState } from "react";
import { useIsMobile } from "@/hooks/use-mobile";
import { useSelection } from "@/context/SelectionContext";
import { SalesAnalysisSimple } from "@/components/reports/SalesAnalysisSimple";
import { SalesAnalysisChartsSimple } from "@/components/reports/SalesAnalysisChartsSimple";
import { MainLayout } from "@/components/layout/MainLayout";
import { DollarSign, Users, Fuel, Monitor, CreditCard, Store, Database, UserCheck } from "lucide-react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Button } from "@/components/ui/button";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";

const MetricCard = ({ title, value, icon: IconComponent, color, status, trend }: {
  title: string;
  value: string;
  icon: React.ElementType;
  color: string;
  status?: { online: number; offline: number };
  trend?: string;
}) => {
  return (
    <Card className="bg-slate-800 border-slate-700">
      <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
        <CardTitle className="text-sm font-medium text-slate-200">
          {title}
        </CardTitle>
        <IconComponent className={`h-4 w-4 text-${color}-400`} />
      </CardHeader>
      <CardContent>
        <div className="text-2xl font-bold text-white">
          {value}
        </div>
        {trend && (
          <p className={`text-xs ${trend.startsWith('+') ? 'text-green-400' : trend.startsWith('-') ? 'text-red-400' : 'text-slate-400'}`}>
            {trend}
          </p>
        )}
        {status && (
          <div className="flex items-center gap-4 text-xs mt-2">
            <div className="flex items-center gap-1">
              <div className="w-2 h-2 bg-green-400 rounded-full"></div>
              <span className="text-slate-300">{status.online} –æ–Ω–ª–∞–π–Ω</span>
            </div>
            <div className="flex items-center gap-1">
              <div className="w-2 h-2 bg-red-400 rounded-full"></div>
              <span className="text-slate-300">{status.offline} –æ—Ñ–ª–∞–π–Ω</span>
            </div>
          </div>
        )}
      </CardContent>
    </Card>
  );
};

export default function NetworkOverview() {
  const isMobile = useIsMobile();
  const { selectedNetwork, selectedTradingPoint } = useSelection();
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const [dateFrom, setDateFrom] = useState("2024-12-01");
  const [dateTo, setDateTo] = useState("2024-12-07");
  const [groupBy, setGroupBy] = useState("7days");

  const isNetworkOnly = selectedNetwork && !selectedTradingPoint;
  const isTradingPointSelected = selectedNetwork && selectedTradingPoint;

  return (
    <MainLayout fullWidth={true}>
      <div className="w-full px-4 md:px-6 lg:px-8">
        <div className="w-full space-y-6">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
          <div className="mb-6 pt-4">
            <h1 className="text-2xl font-semibold text-white">–û–±–∑–æ—Ä —Å–µ—Ç–∏</h1>
            <p className="text-slate-400 mt-2">–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–µ—Ç–∏</p>
          </div>

          <div className="space-y-6">

          {/* –ì–ª–∞–≤–Ω–∞—è —Å–µ—Ç–∫–∞ –ø–ª–∏—Ç–æ–∫ */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 w-full">
          <MetricCard
            title="–¢–æ—á–∫–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏"
            value="0"
            icon={Store}
            color="blue"
            trend="–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ—á–µ–∫ –≤ —Å–µ—Ç–∏"
          />
          
          <MetricCard
            title="–†–µ–∑–µ—Ä–≤—É–∞—Ä—ã"
            value="0"
            icon={Database}
            color="green"
            trend="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–æ–≤"
          />
          
          <MetricCard
            title="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"
            value="0"
            icon={UserCheck}
            color="purple"
            trend="–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–∏—Å—Ç–µ–º—ã"
          />
          
          <MetricCard
            title="–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫ —Ç–æ–ø–ª–∏–≤–∞"
            value="0 –ª"
            icon={Fuel}
            color="orange"
            trend="–¢–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –≤ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞—Ö"
          />
          </div>
          
            {/* –§–∏–ª—å—Ç—Ä—ã - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ —Å–µ—Ç—å */}
          {selectedNetwork && (
          <div className={`bg-slate-800 border border-slate-600 rounded-lg ${isMobile ? 'p-4' : 'p-6'} w-full`}>
            <div className={`flex items-center gap-3 ${isMobile ? 'mb-3' : 'mb-4'}`}>
              <div className="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center flex-shrink-0">
                <span className="text-white text-sm">‚öôÔ∏è</span>
              </div>
              <h2 className={`${isMobile ? 'text-base' : 'text-lg'} font-semibold text-white`}>–§–∏–ª—å—Ç—Ä—ã –∞–Ω–∞–ª–∏–∑–∞</h2>
            </div>
            
            <div className={`grid ${isMobile ? 'grid-cols-1 gap-3' : 'grid-cols-3 gap-4'}`}>
              {/* –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ */}
              <div>
                <Label htmlFor="dateFrom" className="text-sm text-slate-400 mb-2 block">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</Label>
                <Input
                  id="dateFrom"
                  type="date"
                  value={dateFrom}
                  onChange={(e) => setDateFrom(e.target.value)}
                  className="bg-slate-700 border-slate-600 text-white"
                />
              </div>
              
              {/* –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è */}
              <div>
                <Label htmlFor="dateTo" className="text-sm text-slate-400 mb-2 block">–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</Label>
                <Input
                  id="dateTo"
                  type="date"
                  value={dateTo}
                  onChange={(e) => setDateTo(e.target.value)}
                  className="bg-slate-700 border-slate-600 text-white"
                />
              </div>
              
              {/* –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ */}
              <div>
                <Label className="text-sm text-slate-400 mb-2 block">–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞</Label>
                <Select value={groupBy} onValueChange={setGroupBy}>
                  <SelectTrigger className="bg-slate-700 border-slate-600 text-white">
                    <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="7days">7 –¥–Ω–µ–π</SelectItem>
                    <SelectItem value="month">–ú–µ—Å—è—Ü</SelectItem>
                    <SelectItem value="quarter">–ö–≤–∞—Ä—Ç–∞–ª</SelectItem>
                    <SelectItem value="year">–ì–æ–¥</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>
          </div>
        )}

          {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–¥–∞–∂ - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ —Å–µ—Ç—å */}
          {selectedNetwork && (
          <div className="space-y-8">
            <SalesAnalysisSimple 
              selectedNetwork={selectedNetwork}
              selectedTradingPoint={selectedTradingPoint}
            />
            <SalesAnalysisChartsSimple 
              selectedNetwork={selectedNetwork}
              selectedTradingPoint={selectedTradingPoint}
            />
          </div>
        )}

          {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã–±–æ—Ä–µ —Å–µ—Ç–∏ */}
          {!selectedNetwork && (
            <div className="bg-slate-800 border border-slate-600 rounded-lg p-8 text-center w-full">
              <div className="w-16 h-16 bg-slate-700 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-slate-400 text-2xl">üìä</span>
              </div>
              <h3 className="text-xl font-semibold text-white mb-2">–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ç—å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤</h3>
              <p className="text-slate-400">–î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ—Ä–≥–æ–≤—É—é —Å–µ—Ç—å –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ</p>
            </div>
          )}
          </div>
        </div>
      </div>
    </MainLayout>
  );
}