/**
 * –ü–∞–Ω–µ–ª—å –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞/–∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ –ë–î
 */

import { useState, useRef } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Progress } from '@/components/ui/progress';
import { Separator } from '@/components/ui/separator';
import { persistentStorage, PersistentStorage } from '@/utils/persistentStorage';

// –°–æ–∑–¥–∞–µ–º –ø—Å–µ–≤–¥–æ–Ω–∏–º—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
const PersistentStorageInstance = persistentStorage;
const MigrationGenerator = PersistentStorage;
import { 
  Download, 
  Upload, 
  Database, 
  FileJson, 
  FileText, 
  Trash2, 
  AlertTriangle,
  CheckCircle,
  Info
} from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

export default function DataMigrationPanel() {
  const [isExporting, setIsExporting] = useState(false);
  const [isImporting, setIsImporting] = useState(false);
  const [exportData, setExportData] = useState<Record<string, any> | null>(null);
  const fileInputRef = useRef<HTMLInputElement>(null);
  const { toast } = useToast();

  // –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
  const storageInfo = PersistentStorageInstance.getStorageSize();
  const storagePercent = storageInfo.percentage;
  const storageSizeMB = (storageInfo.used / (1024 * 1024)).toFixed(2);

  // –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
  const handleExportAll = async () => {
    setIsExporting(true);
    try {
      const data = PersistentStorageInstance.exportAll();
      setExportData(data);
      
      toast({
        title: "‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã –∫ —ç–∫—Å–ø–æ—Ä—Ç—É",
        description: `–°–æ–±—Ä–∞–Ω–æ ${Object.keys(data.data).length} –∫–æ–ª–ª–µ–∫—Ü–∏–π –¥–∞–Ω–Ω—ã—Ö`,
      });
    } catch (error) {
      toast({
        title: "‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
        variant: "destructive"
      });
    } finally {
      setIsExporting(false);
    }
  };

  // –°–∫–∞—á–∞—Ç—å JSON —Ñ–∞–π–ª
  const handleDownloadJSON = () => {
    if (!exportData) return;
    PersistentStorageInstance.exportToFile();
    toast({
      title: "üíæ JSON —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω",
      description: "–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏",
    });
  };

  // –°–∫–∞—á–∞—Ç—å SQL —Ñ–∞–π–ª
  const handleDownloadSQL = () => {
    if (!exportData) return;
    MigrationGenerator.exportSQLToFile(exportData);
    toast({
      title: "üìÑ SQL —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω", 
      description: "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã SQL –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ PostgreSQL",
    });
  };

  // –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
  const handleImportFile = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (!file) return;

    if (!file.name.endsWith('.json')) {
      toast({
        title: "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞",
        description: "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ JSON —Ñ–∞–π–ª—ã",
        variant: "destructive"
      });
      return;
    }

    setIsImporting(true);
    try {
      await PersistentStorageInstance.importFromFile(file);
      toast({
        title: "üì• –î–∞–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã",
        description: "–í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ localStorage",
      });
      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      setTimeout(() => window.location.reload(), 1500);
    } catch (error) {
      toast({
        title: "‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞",
        description: error instanceof Error ? error.message : "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ",
        variant: "destructive"
      });
    } finally {
      setIsImporting(false);
      // –û—á–∏—Å—Ç–∏–º input
      if (fileInputRef.current) {
        fileInputRef.current.value = '';
      }
    }
  };

  // –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
  const handleClearAll = () => {
    if (!confirm('‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –í–°–ï –¥–∞–Ω–Ω—ã–µ?\n\n–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!')) {
      return;
    }
    
    try {
      PersistentStorage.clearAll();
      toast({
        title: "üóëÔ∏è –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã",
        description: "localStorage –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω",
      });
      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
      setTimeout(() => window.location.reload(), 1000);
    } catch (error) {
      toast({
        title: "‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
        variant: "destructive"
      });
    }
  };

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold tracking-tight">–ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö</h1>
          <p className="text-muted-foreground">
            –≠–∫—Å–ø–æ—Ä—Ç –∏ –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ —Ä–µ–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
          </p>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Database className="h-5 w-5" />
            –°–æ—Å—Ç–æ—è–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="flex items-center justify-between">
            <span>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –º–µ—Å—Ç–∞:</span>
            <Badge variant={storagePercent > 80 ? 'destructive' : storagePercent > 60 ? 'secondary' : 'default'}>
              {storageSizeMB} MB ({storagePercent.toFixed(1)}%)
            </Badge>
          </div>
          <Progress value={storagePercent} className="h-2" />
          
          {storagePercent > 80 && (
            <Alert>
              <AlertTriangle className="h-4 w-4" />
              <AlertDescription>
                –•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 80%. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –ë–î.
              </AlertDescription>
            </Alert>
          )}
        </CardContent>
      </Card>

      {/* –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Download className="h-5 w-5" />
            –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
          </CardTitle>
          <CardDescription>
            –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ —Ä–µ–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <Button 
            onClick={handleExportAll} 
            disabled={isExporting}
            className="w-full"
          >
            {isExporting ? (
              <>‚è≥ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</>
            ) : (
              <>üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫ —ç–∫—Å–ø–æ—Ä—Ç—É</>
            )}
          </Button>

          {exportData && (
            <div className="space-y-3">
              <Alert>
                <CheckCircle className="h-4 w-4" />
                <AlertDescription>
                  –î–∞–Ω–Ω—ã–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã! –ù–∞–π–¥–µ–Ω–æ –∫–æ–ª–ª–µ–∫—Ü–∏–π: {Object.keys(exportData.data).length}
                </AlertDescription>
              </Alert>

              <Separator />

              <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                <Button 
                  onClick={handleDownloadJSON}
                  variant="outline"
                  className="flex items-center gap-2"
                >
                  <FileJson className="h-4 w-4" />
                  –°–∫–∞—á–∞—Ç—å JSON
                </Button>
                
                <Button 
                  onClick={handleDownloadSQL}
                  variant="outline"
                  className="flex items-center gap-2"
                >
                  <FileText className="h-4 w-4" />
                  –°–∫–∞—á–∞—Ç—å SQL –º–∏–≥—Ä–∞—Ü–∏—é
                </Button>
              </div>

              <Alert>
                <Info className="h-4 w-4" />
                <AlertDescription>
                  <strong>JSON —Ñ–∞–π–ª</strong> - –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∏–º–ø–æ—Ä—Ç–∞ –æ–±—Ä–∞—Ç–Ω–æ<br/>
                  <strong>SQL —Ñ–∞–π–ª</strong> - –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ PostgreSQL (—Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º!)
                </AlertDescription>
              </Alert>
            </div>
          )}
        </CardContent>
      </Card>

      {/* –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Upload className="h-5 w-5" />
            –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
          </CardTitle>
          <CardDescription>
            –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON —Ñ–∞–π–ª–∞
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <input
            ref={fileInputRef}
            type="file"
            accept=".json"
            onChange={handleImportFile}
            className="hidden"
            disabled={isImporting}
          />
          
          <Button 
            onClick={() => fileInputRef.current?.click()}
            disabled={isImporting}
            variant="outline"
            className="w-full"
          >
            {isImporting ? (
              <>‚è≥ –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö...</>
            ) : (
              <>üìÅ –í—ã–±—Ä–∞—Ç—å JSON —Ñ–∞–π–ª –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞</>
            )}
          </Button>

          <Alert>
            <AlertTriangle className="h-4 w-4" />
            <AlertDescription>
              –ò–º–ø–æ—Ä—Ç –∑–∞–º–µ–Ω–∏—Ç –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ! –°–¥–µ–ª–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø–µ—Ä–µ–¥ –∏–º–ø–æ—Ä—Ç–æ–º.
            </AlertDescription>
          </Alert>
        </CardContent>
      </Card>

      {/* –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2 text-destructive">
            <Trash2 className="h-5 w-5" />
            –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
          </CardTitle>
          <CardDescription>
            –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
          </CardDescription>
        </CardHeader>
        <CardContent>
          <Button 
            onClick={handleClearAll}
            variant="destructive"
            className="w-full"
          >
            üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
          </Button>
          
          <Alert className="mt-3">
            <AlertTriangle className="h-4 w-4" />
            <AlertDescription>
              <strong>–í–Ω–∏–º–∞–Ω–∏–µ!</strong> –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ. 
              –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è!
            </AlertDescription>
          </Alert>
        </CardContent>
      </Card>

      {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –º–∏–≥—Ä–∞—Ü–∏–∏ */}
      <Card>
        <CardHeader>
          <CardTitle>üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –º–∏–≥—Ä–∞—Ü–∏–∏</CardTitle>
        </CardHeader>
        <CardContent className="prose prose-sm max-w-none">
          <h4>–®–∞–≥–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –ë–î:</h4>
          <ol className="list-decimal list-inside space-y-2">
            <li><strong>–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ</strong> –≤ JSON —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏</li>
            <li><strong>–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ SQL –º–∏–≥—Ä–∞—Ü–∏—é</strong> –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –µ—ë –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º</li>
            <li><strong>–°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö</strong> PostgreSQL —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏</li>
            <li><strong>–í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –º–∏–≥—Ä–∞—Ü–∏—é</strong> –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î</li>
            <li><strong>–û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é</strong>: —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ <code>VITE_USE_HTTP_API=true</code></li>
            <li><strong>–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã</strong> —Å mock –Ω–∞ HTTP –∫–ª–∏–µ–Ω—Ç—ã</li>
            <li><strong>–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ</strong> —Ä–∞–±–æ—Ç—É —Å —Ä–µ–∞–ª—å–Ω—ã–º API</li>
          </ol>
          
          <Alert className="mt-4">
            <Info className="h-4 w-4" />
            <AlertDescription>
              –ü–æ–¥—Ä–æ–±–Ω—ã–π –ø–ª–∞–Ω –º–∏–≥—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω –≤ —Ñ–∞–π–ª–µ <code>PRODUCTION_MIGRATION.md</code>
            </AlertDescription>
          </Alert>
        </CardContent>
      </Card>
    </div>
  );
}