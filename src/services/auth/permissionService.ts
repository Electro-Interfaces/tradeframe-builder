/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–æ–ª—è–º–∏ –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */

import type { AppUser } from './authService';

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ
export const ROLES = {
  SUPER_ADMIN: 'system_admin',
  NETWORK_ADMIN: 'network_admin',
  POINT_MANAGER: 'point_manager',
  OPERATOR: 'operator',
  DRIVER: 'driver',
  BTO_MANAGER: 'bto_manager',
  USER: 'user'
} as const;

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
export const PERMISSIONS = {
  // –ê–¥–º–∏–Ω —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
  ADMIN_USERS: 'admin.users',
  ADMIN_ROLES: 'admin.roles',
  ADMIN_SETTINGS: 'admin.settings',
  ADMIN_AUDIT: 'admin.audit',

  // –°–µ—Ç–µ–≤—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
  NETWORKS_VIEW: 'networks.view',
  NETWORKS_MANAGE: 'networks.manage',

  // –¢–æ—Ä–≥–æ–≤—ã–µ —Ç–æ—á–∫–∏
  POINTS_VIEW: 'points.view',
  POINTS_MANAGE: 'points.manage',

  // –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
  EQUIPMENT_VIEW: 'equipment.view',
  EQUIPMENT_MANAGE: 'equipment.manage',

  // –†–µ–∑–µ—Ä–≤—É–∞—Ä—ã
  TANKS_VIEW: 'tanks.view',
  TANKS_MANAGE: 'tanks.manage',
  TANKS_CALIBRATE: 'tanks.calibrate',

  // –¶–µ–Ω—ã
  PRICES_VIEW: 'prices.view',
  PRICES_MANAGE: 'prices.manage',

  // –û—Ç—á–µ—Ç—ã
  REPORTS_VIEW: 'reports.view',
  REPORTS_EXPORT: 'reports.export'
} as const;

// –ú–∞—Ç—Ä–∏—Ü–∞ —Ä–æ–ª–µ–π –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
const ROLE_PERMISSIONS: Record<string, string[]> = {
  [ROLES.SUPER_ADMIN]: [
    PERMISSIONS.ADMIN_USERS,
    PERMISSIONS.ADMIN_ROLES,
    PERMISSIONS.ADMIN_SETTINGS,
    PERMISSIONS.ADMIN_AUDIT,
    PERMISSIONS.NETWORKS_VIEW,
    PERMISSIONS.NETWORKS_MANAGE,
    PERMISSIONS.POINTS_VIEW,
    PERMISSIONS.POINTS_MANAGE,
    PERMISSIONS.EQUIPMENT_VIEW,
    PERMISSIONS.EQUIPMENT_MANAGE,
    PERMISSIONS.TANKS_VIEW,
    PERMISSIONS.TANKS_MANAGE,
    PERMISSIONS.TANKS_CALIBRATE,
    PERMISSIONS.PRICES_VIEW,
    PERMISSIONS.PRICES_MANAGE,
    PERMISSIONS.REPORTS_VIEW,
    PERMISSIONS.REPORTS_EXPORT
  ],

  [ROLES.NETWORK_ADMIN]: [
    PERMISSIONS.NETWORKS_VIEW,
    PERMISSIONS.NETWORKS_MANAGE,
    PERMISSIONS.POINTS_VIEW,
    PERMISSIONS.POINTS_MANAGE,
    PERMISSIONS.EQUIPMENT_VIEW,
    PERMISSIONS.EQUIPMENT_MANAGE,
    PERMISSIONS.TANKS_VIEW,
    PERMISSIONS.TANKS_MANAGE,
    PERMISSIONS.TANKS_CALIBRATE,
    PERMISSIONS.PRICES_VIEW,
    PERMISSIONS.PRICES_MANAGE,
    PERMISSIONS.REPORTS_VIEW,
    PERMISSIONS.REPORTS_EXPORT
  ],

  [ROLES.POINT_MANAGER]: [
    PERMISSIONS.POINTS_VIEW,
    PERMISSIONS.EQUIPMENT_VIEW,
    PERMISSIONS.EQUIPMENT_MANAGE,
    PERMISSIONS.TANKS_VIEW,
    PERMISSIONS.TANKS_CALIBRATE,
    PERMISSIONS.PRICES_VIEW,
    PERMISSIONS.PRICES_MANAGE,
    PERMISSIONS.REPORTS_VIEW
  ],

  [ROLES.OPERATOR]: [
    PERMISSIONS.EQUIPMENT_VIEW,
    PERMISSIONS.TANKS_VIEW,
    PERMISSIONS.PRICES_VIEW,
    PERMISSIONS.REPORTS_VIEW
  ],

  [ROLES.BTO_MANAGER]: [
    PERMISSIONS.NETWORKS_VIEW,
    PERMISSIONS.POINTS_VIEW,
    PERMISSIONS.EQUIPMENT_VIEW,
    PERMISSIONS.TANKS_VIEW,
    PERMISSIONS.REPORTS_VIEW
  ],

  [ROLES.DRIVER]: [
    PERMISSIONS.EQUIPMENT_VIEW,
    PERMISSIONS.TANKS_VIEW
  ],

  [ROLES.USER]: [
    PERMISSIONS.NETWORKS_VIEW,
    PERMISSIONS.POINTS_VIEW
  ]
};

// –í–∏–¥–∏–º–æ—Å—Ç—å –º–µ–Ω—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
export interface MenuVisibility {
  admin: boolean;
  networks: boolean;
  tradingPoint: boolean;
  settings: boolean;
  reports: boolean;
}

class PermissionService {
  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  getPermissionsForUser(user: AppUser): string[] {
    // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å permission "all" - —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω
    if (user.permissions.includes('all')) {
      return ROLE_PERMISSIONS[ROLES.SUPER_ADMIN];
    }

    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä—è–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤ preferences, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
    if (user.permissions.length > 0) {
      return user.permissions;
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–æ–ª–∏
    const rolePermissions = ROLE_PERMISSIONS[user.role] || ROLE_PERMISSIONS[ROLES.USER];

    console.log(`üîë PermissionService: User ${user.email} role "${user.role}" has permissions:`, rolePermissions);

    return rolePermissions;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  hasPermission(user: AppUser, permission: string): boolean {
    const userPermissions = this.getPermissionsForUser(user);
    return userPermissions.includes(permission);
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
   */
  isAdmin(user: AppUser): boolean {
    return user.role === ROLES.SUPER_ADMIN ||
           user.permissions.includes('all') ||
           this.hasPermission(user, PERMISSIONS.ADMIN_USERS);
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤–∏–¥–∏–º–æ—Å—Ç—å —Ä–∞–∑–¥–µ–ª–æ–≤ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  getMenuVisibility(user: AppUser): MenuVisibility {
    if (!user) {
      return {
        admin: false,
        networks: false,
        tradingPoint: false,
        settings: false,
        reports: false
      };
    }

    console.log('üîç PermissionService: Calculating menu visibility for user:', {
      email: user.email,
      role: user.role,
      permissions: user.permissions
    });

    const permissions = this.getPermissionsForUser(user);

    const visibility: MenuVisibility = {
      admin: this.isAdmin(user),
      networks: permissions.includes(PERMISSIONS.NETWORKS_VIEW),
      tradingPoint: permissions.includes(PERMISSIONS.POINTS_VIEW) ||
                   permissions.includes(PERMISSIONS.EQUIPMENT_VIEW),
      settings: this.isAdmin(user),
      reports: permissions.includes(PERMISSIONS.REPORTS_VIEW)
    };

    console.log('üìä PermissionService: Menu visibility result:', visibility);

    return visibility;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è —Ä–æ–ª–∏
   */
  getRoleDisplayName(role: string): string {
    const roleNames: Record<string, string> = {
      [ROLES.SUPER_ADMIN]: '–°—É–ø–µ—Ä –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      [ROLES.NETWORK_ADMIN]: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –°–µ—Ç–∏',
      [ROLES.POINT_MANAGER]: '–ú–µ–Ω–µ–¥–∂–µ—Ä –¢–æ—á–∫–∏',
      [ROLES.OPERATOR]: '–û–ø–µ—Ä–∞—Ç–æ—Ä',
      [ROLES.DRIVER]: '–í–æ–¥–∏—Ç–µ–ª—å',
      [ROLES.BTO_MANAGER]: '–ú–µ–Ω–µ–¥–∂–µ—Ä –ë–¢–û',
      [ROLES.USER]: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
    };

    return roleNames[role] || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å AuthContext
   */
  canManageTanks(user: AppUser): boolean {
    return this.hasPermission(user, PERMISSIONS.TANKS_MANAGE);
  }

  canCalibrate(user: AppUser): boolean {
    return this.hasPermission(user, PERMISSIONS.TANKS_CALIBRATE);
  }

  canManagePrices(user: AppUser): boolean {
    return this.hasPermission(user, PERMISSIONS.PRICES_MANAGE);
  }

  canManageUsers(user: AppUser): boolean {
    return this.hasPermission(user, PERMISSIONS.ADMIN_USERS);
  }

  canViewReports(user: AppUser): boolean {
    return this.hasPermission(user, PERMISSIONS.REPORTS_VIEW);
  }
}

export const permissionService = new PermissionService();

// –£—Ç–∏–ª–∏—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
export const hasPermission = (user: AppUser | null | undefined, permission: string): boolean => {
  if (!user) return false;
  return permissionService.hasPermission(user, permission);
};

export const hasRole = (user: AppUser | null | undefined, role: string): boolean => {
  if (!user) return false;
  return user.role === role;
};

export const isAdmin = (user: AppUser | null | undefined): boolean => {
  if (!user) return false;
  return permissionService.isAdmin(user);
};

export type { MenuVisibility };