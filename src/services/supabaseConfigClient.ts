/**
 * –ë–∞–∑–æ–≤—ã–π Supabase –∫–ª–∏–µ–Ω—Ç –¢–û–õ–¨–ö–û –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ fallback –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
 */

import { createClient, SupabaseClient } from '@supabase/supabase-js';

// –¢–û–õ–¨–ö–û –î–õ–Ø –ó–ê–ì–†–£–ó–ö–ò –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò - –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ environment
const configUrl = import.meta.env.VITE_SUPABASE_URL;
const configKey = import.meta.env.VITE_SUPABASE_ANON_KEY || import.meta.env.VITE_SUPABASE_SERVICE_KEY;

if (!configUrl || !configKey) {
  console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –±–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è VITE_SUPABASE_URL –∏–ª–∏ VITE_SUPABASE_ANON_KEY');
  console.error('   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
}

// –°–æ–∑–¥–∞–µ–º –¢–û–õ–¨–ö–û –∫–ª–∏–µ–Ω—Ç –¥–ª—è —á—Ç–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
export const supabaseConfigClient: SupabaseClient = createClient(
  configUrl || 'https://placeholder.supabase.co',
  configKey || 'placeholder-key',
  {
    auth: {
      autoRefreshToken: false,
      persistSession: false
    }
  }
);

console.log('üîß –ë–∞–∑–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω:', {
  url: configUrl ? `${configUrl.substring(0, 30)}...` : '–ù–ï –ó–ê–î–ê–ù',
  keyPresent: !!configKey,
  keyType: configKey?.includes('service_role') ? 'service_role' : configKey?.includes('anon') ? 'anon' : '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'
});

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–∞–∑–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */
export async function testConfigConnection(): Promise<boolean> {
  try {
    const { data, error } = await supabaseConfigClient
      .from('system_config')
      .select('config_key')
      .limit(1);
      
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error.message);
      return false;
    }
    
    console.log('‚úÖ –ë–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    return true;
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
    return false;
  }
}