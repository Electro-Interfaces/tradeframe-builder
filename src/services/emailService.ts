/**
 * Email Service –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–æ–≤ –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–µ–±-—Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email –±–µ–∑ backend —Å–µ—Ä–≤–µ—Ä–∞
 */

export interface EmailConfig {
  enabled: boolean;
  recipientEmail: string;
  senderName?: string;
  serviceProvider: 'formsubmit' | 'emailjs' | 'custom';
  apiKey?: string;
}

export interface EmailSendOptions {
  to: string;
  subject: string;
  message: string;
  attachmentBlob?: Blob;
  attachmentName?: string;
}

const EMAIL_CONFIG_KEY = 'email_integration';

const defaultEmailConfig: EmailConfig = {
  enabled: false,
  recipientEmail: '',
  senderName: 'TradeFrame System',
  serviceProvider: 'formsubmit'
};

class EmailService {
  
  async getEmailConfig(): Promise<EmailConfig> {
    try {
      const saved = localStorage.getItem(EMAIL_CONFIG_KEY);
      return saved ? { ...defaultEmailConfig, ...JSON.parse(saved) } : defaultEmailConfig;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Email:', error);
      return defaultEmailConfig;
    }
  }

  async saveEmailConfig(config: EmailConfig): Promise<void> {
    try {
      localStorage.setItem(EMAIL_CONFIG_KEY, JSON.stringify(config));
      console.log('‚úÖ Email –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Email:', error);
      throw error;
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ email —á–µ—Ä–µ–∑ FormSubmit (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å)
   */
  private async sendViaFormSubmit(options: EmailSendOptions): Promise<boolean> {
    const config = await this.getEmailConfig();
    
    if (!config.recipientEmail) {
      throw new Error('Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }

    try {
      // FormSubmit –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–∞–π–ª—ã –Ω–∞–ø—Ä—è–º—É—é, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
      const formData = new FormData();
      formData.append('_subject', options.subject);
      formData.append('_autoresponse', '–í–∞—à –æ—Ç—á–µ—Ç –ø–æ–ª—É—á–µ–Ω –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω —Å–∏—Å—Ç–µ–º–æ–π TradeFrame');
      formData.append('message', options.message);
      formData.append('_next', window.location.origin); // Redirect –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
      formData.append('_captcha', 'false'); // –û—Ç–∫–ª—é—á–∞–µ–º –∫–∞–ø—á—É
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å –≤–ª–æ–∂–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ
      if (options.attachmentBlob && options.attachmentName) {
        formData.append('attachment_info', `–§–∞–π–ª: ${options.attachmentName} (${(options.attachmentBlob.size / 1024).toFixed(1)} KB)`);
      }

      const response = await fetch(`https://formsubmit.co/${config.recipientEmail}`, {
        method: 'POST',
        body: formData
      });

      if (!response.ok) {
        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
      }

      console.log('‚úÖ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ FormSubmit');
      return true;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email —á–µ—Ä–µ–∑ FormSubmit:', error);
      throw error;
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ email —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º (–±–µ–∑ —Ñ–∞–π–ª–∞)
   */
  async sendReportNotification(options: EmailSendOptions): Promise<boolean> {
    try {
      const config = await this.getEmailConfig();
      
      if (!config.enabled) {
        console.log('‚ÑπÔ∏è Email –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö');
        return false;
      }

      console.log('üìß –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:', {
        to: config.recipientEmail,
        subject: options.subject
      });

      switch (config.serviceProvider) {
        case 'formsubmit':
          return await this.sendViaFormSubmit(options);
        
        default:
          throw new Error(`–ü—Ä–æ–≤–∞–π–¥–µ—Ä ${config.serviceProvider} –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è`);
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error);
      throw error;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ email
   */
  async testEmailConfig(): Promise<boolean> {
    try {
      const config = await this.getEmailConfig();
      
      if (!config.enabled || !config.recipientEmail) {
        return false;
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      await this.sendReportNotification({
        to: config.recipientEmail,
        subject: '‚úÖ –¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ TradeFrame Email',
        message: `üîß –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–∏—Å—Ç–µ–º—ã TradeFrame\n\n` +
          `üìÖ –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${new Date().toLocaleString('ru-RU')}\n` +
          `‚öôÔ∏è –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${config.serviceProvider}\n\n` +
          `–ï—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–Ω–∞—á–∏—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.`
      });

      return true;
      
    } catch (error) {
      console.error('‚ùå –¢–µ—Å—Ç email –Ω–µ –ø—Ä–æ—à–µ–ª:', error);
      return false;
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ (–¥–ª—è email –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π)
   */
  generateDownloadLink(blob: Blob, filename: string): string {
    const url = URL.createObjectURL(blob);
    return `${window.location.origin}#download=${encodeURIComponent(filename)}&url=${encodeURIComponent(url)}`;
  }
}

export const emailService = new EmailService();