/**
 * Coupons Utilities - –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫—É–ø–æ–Ω–∞–º–∏
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –≤–∞–ª–∏–¥–∞—Ü–∏—è, –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
 */

import { CouponState, CouponPriority } from '@/types/coupons';

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∫—É–ø–æ–Ω–æ–≤
export const COUPON_CONSTANTS = {
  // –ü–æ—Ä–æ–≥–∏ –≤–æ–∑—Ä–∞—Å—Ç–∞ –∫—É–ø–æ–Ω–æ–≤ (–¥–Ω–∏)
  OLD_COUPON_THRESHOLD: 7,
  CRITICAL_COUPON_THRESHOLD: 30,

  // –ü–æ—Ä–æ–≥–∏ —Å—É–º–º
  LARGE_AMOUNT_THRESHOLD: 1000,
  MEDIUM_AMOUNT_THRESHOLD: 500,

  // –§–æ—Ä–º–∞—Ç—ã –¥–∞—Ç
  DATE_FORMAT: 'yyyy-MM-dd',
  DATETIME_FORMAT: 'yyyy-MM-dd HH:mm:ss',
  DISPLAY_DATE_FORMAT: 'dd.MM.yyyy',
  DISPLAY_DATETIME_FORMAT: 'dd.MM.yyyy HH:mm',

  // –¶–≤–µ—Ç–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤
  COLORS: {
    active: '#10b981',      // green-500
    redeemed: '#6b7280',    // gray-500
    normal: '#3b82f6',      // blue-500
    attention: '#f59e0b',   // amber-500
    critical: '#ef4444',    // red-500
  },

  // –ò–∫–æ–Ω–∫–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤
  ICONS: {
    active: 'üü¢',
    redeemed: '‚ö™',
    normal: 'üîµ',
    attention: 'üü°',
    critical: 'üî¥',
  }
} as const;

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É–º–º—ã –≤ —Ä–æ—Å—Å–∏–π—Å–∫–æ–π –≤–∞–ª—é—Ç–µ
 */
export function formatCurrency(amount: number): string {
  return new Intl.NumberFormat('ru-RU', {
    style: 'currency',
    currency: 'RUB',
    minimumFractionDigits: 2,
    maximumFractionDigits: 2
  }).format(amount);
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É–º–º—ã –±–µ–∑ —Å–∏–º–≤–æ–ª–∞ –≤–∞–ª—é—Ç—ã
 */
export function formatAmount(amount: number): string {
  return new Intl.NumberFormat('ru-RU', {
    minimumFractionDigits: 2,
    maximumFractionDigits: 2
  }).format(amount);
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏ —Ç—ã—Å—è—á
 */
export function formatNumber(num: number): string {
  return new Intl.NumberFormat('ru-RU').format(num);
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
 */
export function formatDate(dateString: string): string {
  try {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric'
    });
  } catch {
    return dateString;
  }
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
 */
export function formatDateTime(dateString: string): string {
  try {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  } catch {
    return dateString;
  }
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "3 –¥–Ω—è –Ω–∞–∑–∞–¥")
 */
export function formatRelativeTime(dateString: string): string {
  try {
    const date = new Date(dateString);
    const now = new Date();
    const diffInMs = now.getTime() - date.getTime();
    const diffInMinutes = Math.floor(diffInMs / (1000 * 60));
    const diffInHours = Math.floor(diffInMinutes / 60);
    const diffInDays = Math.floor(diffInHours / 24);

    if (diffInMinutes < 60) {
      return `${diffInMinutes} –º–∏–Ω. –Ω–∞–∑–∞–¥`;
    } else if (diffInHours < 24) {
      return `${diffInHours} —á. –Ω–∞–∑–∞–¥`;
    } else if (diffInDays < 30) {
      return `${diffInDays} –¥–Ω. –Ω–∞–∑–∞–¥`;
    } else {
      const diffInMonths = Math.floor(diffInDays / 30);
      return `${diffInMonths} –º–µ—Å. –Ω–∞–∑–∞–¥`;
    }
  } catch {
    return dateString;
  }
}

/**
 * –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞ –∫—É–ø–æ–Ω–∞ –≤ –¥–Ω—è—Ö
 */
export function calculateCouponAge(dateString: string): number {
  try {
    const date = new Date(dateString);
    const now = new Date();
    const diffInMs = now.getTime() - date.getTime();
    return Math.floor(diffInMs / (1000 * 60 * 60 * 24));
  } catch {
    return 0;
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –ø–æ —Å—Ç–∞—Ç—É—Å—É –∫—É–ø–æ–Ω–∞
 */
export function getCouponStateColor(state: CouponState): string {
  switch (state) {
    case '–ê–∫—Ç–∏–≤–µ–Ω':
      return COUPON_CONSTANTS.COLORS.active;
    case '–ü–æ–≥–∞—à–µ–Ω':
      return COUPON_CONSTANTS.COLORS.redeemed;
    default:
      return COUPON_CONSTANTS.COLORS.normal;
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É –∫—É–ø–æ–Ω–∞
 */
export function getCouponPriorityColor(priority: CouponPriority): string {
  switch (priority) {
    case 'normal':
      return COUPON_CONSTANTS.COLORS.normal;
    case 'attention':
      return COUPON_CONSTANTS.COLORS.attention;
    case 'critical':
      return COUPON_CONSTANTS.COLORS.critical;
    default:
      return COUPON_CONSTANTS.COLORS.normal;
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ –∫—É–ø–æ–Ω–∞
 */
export function getCouponStateIcon(state: CouponState): string {
  switch (state) {
    case '–ê–∫—Ç–∏–≤–µ–Ω':
      return COUPON_CONSTANTS.ICONS.active;
    case '–ü–æ–≥–∞—à–µ–Ω':
      return COUPON_CONSTANTS.ICONS.redeemed;
    default:
      return COUPON_CONSTANTS.ICONS.normal;
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∫—É–ø–æ–Ω–∞
 */
export function getCouponPriorityIcon(priority: CouponPriority): string {
  switch (priority) {
    case 'normal':
      return COUPON_CONSTANTS.ICONS.normal;
    case 'attention':
      return COUPON_CONSTANTS.ICONS.attention;
    case 'critical':
      return COUPON_CONSTANTS.ICONS.critical;
    default:
      return COUPON_CONSTANTS.ICONS.normal;
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∫—É–ø–æ–Ω–∞
 */
export function getCouponStateDescription(state: CouponState): string {
  switch (state) {
    case '–ê–∫—Ç–∏–≤–µ–Ω':
      return '–ö—É–ø–æ–Ω –∞–∫—Ç–∏–≤–µ–Ω, –æ—Å—Ç–∞—Ç–æ–∫ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å';
    case '–ü–æ–≥–∞—à–µ–Ω':
      return '–ö—É–ø–æ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–≥–∞—à–µ–Ω';
    default:
      return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å';
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∫—É–ø–æ–Ω–∞
 */
export function getCouponPriorityDescription(priority: CouponPriority): string {
  switch (priority) {
    case 'normal':
      return '–û–±—ã—á–Ω—ã–π –∫—É–ø–æ–Ω, –≤–Ω–∏–º–∞–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç';
    case 'attention':
      return '–¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è (—Å—Ç–∞—Ä—ã–π –∏–ª–∏ –∫—Ä—É–ø–Ω–∞—è —Å—É–º–º–∞)';
    case 'critical':
      return '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∫—É–ø–æ–Ω (–æ—á–µ–Ω—å —Å—Ç–∞—Ä—ã–π –∏–ª–∏ –æ—á–µ–Ω—å –∫—Ä—É–ø–Ω–∞—è —Å—É–º–º–∞)';
    default:
      return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç';
  }
}

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ –∫—É–ø–æ–Ω–∞
 */
export function validateCouponNumber(number: string): boolean {
  // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è: –Ω–µ –ø—É—Å—Ç–æ–π –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏ –±—É–∫–≤—ã
  return /^[a-zA-Z0-9]+$/.test(number.trim());
}

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—É–º–º—ã
 */
export function validateAmount(amount: number): boolean {
  return amount >= 0 && amount <= 999999; // –ú–∞–∫—Å. 999,999 —Ä—É–±–ª–µ–π
}

/**
 * –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ –∫—É–ø–æ–Ω–∞ (—É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã, –ø—Ä–∏–≤–æ–¥–∏–º –∫ –≤–µ—Ä—Ö–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É)
 */
export function normalizeCouponNumber(number: string): string {
  return number.trim().toUpperCase();
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞—Ç (–¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤)
 */
export function generateDateRange(type: 'today' | 'week' | 'month' | 'year'): { from: string; to: string } {
  const now = new Date();
  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());

  let from: Date;

  switch (type) {
    case 'today':
      from = today;
      break;
    case 'week':
      from = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);
      break;
    case 'month':
      from = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000);
      break;
    case 'year':
      from = new Date(today.getTime() - 365 * 24 * 60 * 60 * 1000);
      break;
    default:
      from = today;
  }

  return {
    from: from.toISOString().split('T')[0],
    to: today.toISOString().split('T')[0]
  };
}

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –≤ —Å—Ç—Ä–æ–∫—É —Å —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ—Ü–µ–Ω—Ç–∞
 */
export function formatPercentage(value: number, total: number): string {
  if (total === 0) return '0%';
  const percentage = (value / total) * 100;
  return `${percentage.toFixed(1)}%`;
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ CSS –∫–ª–∞—Å—Å–æ–≤ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫—É–ø–æ–Ω–∞
 */
export function getCouponStateClasses(state: CouponState): string {
  switch (state) {
    case '–ê–∫—Ç–∏–≤–µ–Ω':
      return 'bg-green-100 text-green-800 border-green-200';
    case '–ü–æ–≥–∞—à–µ–Ω':
      return 'bg-gray-100 text-gray-800 border-gray-200';
    default:
      return 'bg-blue-100 text-blue-800 border-blue-200';
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ CSS –∫–ª–∞—Å—Å–æ–≤ –¥–ª—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∫—É–ø–æ–Ω–∞
 */
export function getCouponPriorityClasses(priority: CouponPriority): string {
  switch (priority) {
    case 'normal':
      return 'bg-blue-100 text-blue-800 border-blue-200';
    case 'attention':
      return 'bg-amber-100 text-amber-800 border-amber-200';
    case 'critical':
      return 'bg-red-100 text-red-800 border-red-200';
    default:
      return 'bg-gray-100 text-gray-800 border-gray-200';
  }
}

/**
 * –î–µ–±–∞—É–Ω—Å —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞
 */
export function debounce<T extends (...args: any[]) => any>(
  func: T,
  waitMs: number
): (...args: Parameters<T>) => void {
  let timeoutId: NodeJS.Timeout;

  return (...args: Parameters<T>) => {
    clearTimeout(timeoutId);
    timeoutId = setTimeout(() => func(...args), waitMs);
  };
}

/**
 * –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–æ—Ä–º–∞—Ç
 */
export function downloadCsv(data: string, filename: string): void {
  const blob = new Blob([data], { type: 'text/csv;charset=utf-8;' });
  const link = document.createElement('a');

  if (link.download !== undefined) {
    const url = URL.createObjectURL(blob);
    link.setAttribute('href', url);
    link.setAttribute('download', filename);
    link.style.visibility = 'hidden';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  }
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –∫—É–ø–æ–Ω–∞ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤
 */
export function getCouponSummary(coupon: {
  number: string;
  rest: number;
  state: CouponState;
  dt_beg: string;
}): string {
  const age = calculateCouponAge(coupon.dt_beg);
  return `${coupon.number} ‚Ä¢ ${formatCurrency(coupon.rest)} ‚Ä¢ ${age} –¥–Ω. ‚Ä¢ ${coupon.state}`;
}