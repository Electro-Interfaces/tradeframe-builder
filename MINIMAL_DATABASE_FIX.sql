-- ============================================================================
-- MINIMAL DATABASE ACCESS FIX - ONLY EXISTING TABLES
-- ============================================================================
-- –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —Ç–∞–±–ª–∏—Ü–∞–º
-- –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –±–µ–∑ –æ—à–∏–±–æ–∫
-- ============================================================================

-- –®–ê–ì 1: –ü–†–û–í–ï–†–Ø–ï–ú –ö–ê–ö–ò–ï –¢–ê–ë–õ–ò–¶–´ –°–£–©–ï–°–¢–í–£–Æ–¢
-- ============================================================================

SELECT 
    'EXISTING TABLES CHECK:' as info,
    tablename,
    CASE 
        WHEN rowsecurity THEN 'RLS ON' 
        ELSE 'RLS OFF' 
    END as current_rls_status
FROM pg_tables 
WHERE schemaname = 'public'
ORDER BY tablename;

-- ============================================================================
-- –®–ê–ì 2: –û–¢–ö–õ–Æ–ß–ê–ï–ú RLS –¢–û–õ–¨–ö–û –î–õ–Ø –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –¢–ê–ë–õ–ò–¶
-- ============================================================================

-- Equipment templates (—Ç–æ—á–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ –≤–∞—à–∏–º —Ç–µ—Å—Ç–∞–º)
ALTER TABLE IF EXISTS equipment_templates DISABLE ROW LEVEL SECURITY;

-- Equipment (–æ—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞)
ALTER TABLE IF EXISTS equipment DISABLE ROW LEVEL SECURITY;

-- Networks (–±–∞–∑–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞)
ALTER TABLE IF EXISTS networks DISABLE ROW LEVEL SECURITY;

-- Trading points
ALTER TABLE IF EXISTS trading_points DISABLE ROW LEVEL SECURITY;

-- Users
ALTER TABLE IF EXISTS users DISABLE ROW LEVEL SECURITY;

-- Nomenclature  
ALTER TABLE IF EXISTS nomenclature DISABLE ROW LEVEL SECURITY;

-- Operations
ALTER TABLE IF EXISTS operations DISABLE ROW LEVEL SECURITY;

-- –î—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
ALTER TABLE IF EXISTS user_roles DISABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS roles DISABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS prices DISABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS workflows DISABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS legal_documents DISABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS legal_user_acceptances DISABLE ROW LEVEL SECURITY;

SELECT '‚úÖ RLS disabled for all existing tables' as step2_status;

-- ============================================================================
-- –®–ê–ì 3: –£–î–ê–õ–Ø–ï–ú –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –ü–û–õ–ò–¢–ò–ö–ò
-- ============================================================================

-- –£–¥–∞–ª—è–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
DROP POLICY IF EXISTS equipment_templates_policy ON equipment_templates;
DROP POLICY IF EXISTS equipment_templates_allow_all ON equipment_templates;
DROP POLICY IF EXISTS equipment_templates_allow_anon ON equipment_templates;
DROP POLICY IF EXISTS equipment_templates_allow_authenticated ON equipment_templates;
DROP POLICY IF EXISTS equipment_templates_allow_service ON equipment_templates;

DROP POLICY IF EXISTS equipment_policy ON equipment;
DROP POLICY IF EXISTS equipment_allow_all ON equipment;
DROP POLICY IF EXISTS equipment_allow_anon ON equipment;
DROP POLICY IF EXISTS equipment_allow_authenticated ON equipment;
DROP POLICY IF EXISTS equipment_allow_service ON equipment;

DROP POLICY IF EXISTS networks_policy ON networks;
DROP POLICY IF EXISTS networks_allow_all ON networks;
DROP POLICY IF EXISTS networks_allow_anon ON networks;
DROP POLICY IF EXISTS networks_allow_authenticated ON networks;

DROP POLICY IF EXISTS users_policy ON users;
DROP POLICY IF EXISTS users_allow_all ON users;

DROP POLICY IF EXISTS nomenclature_policy ON nomenclature;
DROP POLICY IF EXISTS operations_policy ON operations;

SELECT '‚úÖ All existing policies removed' as step3_status;

-- ============================================================================
-- –®–ê–ì 4: –°–û–ó–î–ê–ï–ú –ü–†–û–°–¢–´–ï –†–ê–ó–†–ï–®–ê–Æ–©–ò–ï –ü–û–õ–ò–¢–ò–ö–ò
-- ============================================================================

-- Equipment Templates - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
DO $$ 
BEGIN
    IF EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename = 'equipment_templates') THEN
        ALTER TABLE equipment_templates ENABLE ROW LEVEL SECURITY;
        CREATE POLICY equipment_templates_dev_policy ON equipment_templates FOR ALL TO anon USING (true) WITH CHECK (true);
        CREATE POLICY equipment_templates_auth_policy ON equipment_templates FOR ALL TO authenticated USING (true) WITH CHECK (true);
        RAISE NOTICE '‚úÖ Equipment templates policies created';
    END IF;
END $$;

-- Equipment - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
DO $$ 
BEGIN
    IF EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename = 'equipment') THEN
        ALTER TABLE equipment ENABLE ROW LEVEL SECURITY;
        CREATE POLICY equipment_dev_policy ON equipment FOR ALL TO anon USING (true) WITH CHECK (true);
        CREATE POLICY equipment_auth_policy ON equipment FOR ALL TO authenticated USING (true) WITH CHECK (true);
        RAISE NOTICE '‚úÖ Equipment policies created';
    END IF;
END $$;

-- Networks - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
DO $$ 
BEGIN
    IF EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename = 'networks') THEN
        ALTER TABLE networks ENABLE ROW LEVEL SECURITY;
        CREATE POLICY networks_dev_policy ON networks FOR ALL TO anon USING (true) WITH CHECK (true);
        CREATE POLICY networks_auth_policy ON networks FOR ALL TO authenticated USING (true) WITH CHECK (true);
        RAISE NOTICE '‚úÖ Networks policies created';
    END IF;
END $$;

-- Trading Points - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç  
DO $$ 
BEGIN
    IF EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename = 'trading_points') THEN
        ALTER TABLE trading_points ENABLE ROW LEVEL SECURITY;
        CREATE POLICY trading_points_dev_policy ON trading_points FOR ALL TO anon USING (true) WITH CHECK (true);
        CREATE POLICY trading_points_auth_policy ON trading_points FOR ALL TO authenticated USING (true) WITH CHECK (true);
        RAISE NOTICE '‚úÖ Trading points policies created';
    END IF;
END $$;

-- Users - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
DO $$ 
BEGIN
    IF EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename = 'users') THEN
        ALTER TABLE users ENABLE ROW LEVEL SECURITY;
        CREATE POLICY users_dev_policy ON users FOR ALL TO anon USING (true) WITH CHECK (true);
        CREATE POLICY users_auth_policy ON users FOR ALL TO authenticated USING (true) WITH CHECK (true);
        RAISE NOTICE '‚úÖ Users policies created';
    END IF;
END $$;

-- Nomenclature - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
DO $$ 
BEGIN
    IF EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename = 'nomenclature') THEN
        ALTER TABLE nomenclature ENABLE ROW LEVEL SECURITY;
        CREATE POLICY nomenclature_dev_policy ON nomenclature FOR ALL TO anon USING (true) WITH CHECK (true);
        CREATE POLICY nomenclature_auth_policy ON nomenclature FOR ALL TO authenticated USING (true) WITH CHECK (true);
        RAISE NOTICE '‚úÖ Nomenclature policies created';
    END IF;
END $$;

-- Operations - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
DO $$ 
BEGIN
    IF EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename = 'operations') THEN
        ALTER TABLE operations ENABLE ROW LEVEL SECURITY;
        CREATE POLICY operations_dev_policy ON operations FOR ALL TO anon USING (true) WITH CHECK (true);
        CREATE POLICY operations_auth_policy ON operations FOR ALL TO authenticated USING (true) WITH CHECK (true);
        RAISE NOTICE '‚úÖ Operations policies created';
    END IF;
END $$;

SELECT '‚úÖ Permissive policies created for existing tables' as step4_status;

-- ============================================================================
-- –®–ê–ì 5: –ù–ê–°–¢–†–ê–ò–í–ê–ï–ú –ü–†–ê–í–ê –î–û–°–¢–£–ü–ê
-- ============================================================================

-- –ë–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è anon
GRANT USAGE ON SCHEMA public TO anon;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO anon;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO anon;

-- –ë–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è authenticated
GRANT USAGE ON SCHEMA public TO authenticated;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO authenticated;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO authenticated;

-- –ü—Ä–∞–≤–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO authenticated;

SELECT '‚úÖ Access rights granted' as step5_status;

-- ============================================================================
-- –®–ê–ì 6: –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
-- ============================================================================

-- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
SELECT 
    'üìä FINAL STATUS:' as info,
    tablename as table_name,
    CASE 
        WHEN rowsecurity THEN 'üîí RLS ON' 
        ELSE 'üîì RLS OFF' 
    END as rls_status,
    'ACCESSIBLE' as expected_access
FROM pg_tables 
WHERE schemaname = 'public'
ORDER BY tablename;

-- –°—á–∏—Ç–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏
SELECT 
    'üìã POLICIES CREATED:' as info,
    COUNT(*) as total_policies
FROM pg_policies 
WHERE schemaname = 'public';

-- ============================================================================
-- –§–ò–ù–ê–õ–¨–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢
-- ============================================================================

SELECT 'üéâ MINIMAL DATABASE FIX COMPLETED!' as status;
SELECT '‚úÖ All existing tables are now accessible' as result;
SELECT 'üöÄ Try your API calls - 401 errors should be gone!' as instruction;
SELECT 'üîß This fix works only with existing tables, no missing table errors' as note;