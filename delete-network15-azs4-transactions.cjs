const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'https://tohtryzyffcebtyvkxwh.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRvaHRyeXp5ZmZjZWJ0eXZreHdoIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1Njg3NTQ0OCwiZXhwIjoyMDcyNDUxNDQ4fQ.kN6uF9YhJzbzu2ugHRQCyzuNOwawsTDtwelGO0uCjyY';

const supabase = createClient(supabaseUrl, supabaseKey);

async function deleteNetwork15Station4Transactions() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è —Å–µ—Ç–∏ 15, –ê–ó–° 4...');

  try {
    // –°–Ω–∞—á–∞–ª–∞ –Ω–∞–π–¥–µ–º –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —Å–µ—Ç–∏ 15, –ê–ó–° 4
    const { data: transactions, error: selectError } = await supabase
      .from('operations')
      .select('*')
      .eq('network_id', 15)
      .eq('trading_point_id', 4);

    if (selectError) {
      throw selectError;
    }

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${transactions.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è —Å–µ—Ç–∏ 15, –ê–ó–° 4`);

    if (transactions.length === 0) {
      console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const transactionTypes = transactions.reduce((acc, t) => {
      acc[t.operation_type] = (acc[t.operation_type] || 0) + 1;
      return acc;
    }, {});

    console.log('üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:');
    Object.entries(transactionTypes).forEach(([type, count]) => {
      console.log(`  - ${type}: ${count}`);
    });

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
    
    const { error: deleteError } = await supabase
      .from('operations')
      .delete()
      .eq('network_id', 15)
      .eq('trading_point_id', 4);

    if (deleteError) {
      throw deleteError;
    }

    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ ${transactions.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è —Å–µ—Ç–∏ 15, –ê–ó–° 4`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω—ã
    const { data: remainingTransactions, error: checkError } = await supabase
      .from('operations')
      .select('*')
      .eq('network_id', 15)
      .eq('trading_point_id', 4);

    if (checkError) {
      throw checkError;
    }

    if (remainingTransactions.length === 0) {
      console.log('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–µ—Ç–∏ 15, –ê–ó–° 4 —É–¥–∞–ª–µ–Ω—ã');
    } else {
      console.log(`‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –æ—Å—Ç–∞–ª–æ—Å—å ${remainingTransactions.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
deleteNetwork15Station4Transactions();