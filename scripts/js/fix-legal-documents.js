#!/usr/bin/env node

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ Supabase
 */

import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = 'https://ssvazdgnmatbdynkhkqo.supabase.co';
const SERVICE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNzdmF6ZGdubWF0YmR5bmtoa3FvIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NzM0MzgzNCwiZXhwIjoyMDcyOTE5ODM0fQ.Gen-PI-vDkKjskpIvJNcQw0Uj3d0zGXB98zIxNK6di0';

const supabase = createClient(SUPABASE_URL, SERVICE_KEY, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
});

async function createLegalDocuments() {
  console.log('üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    const { data: existing, error } = await supabase
      .from('document_types')
      .select('*')
      .limit(1);

    if (error) {
      console.log('‚ö†Ô∏è –¢–∞–±–ª–∏—Ü—ã —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏...');
      console.log('‚úÖ –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - —Å–∏—Å—Ç–µ–º–∞ –≤—Ö–æ–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤');
      return;
    }

    // –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç ToS
    const { data: tosExists } = await supabase
      .from('document_types')
      .select('*')
      .eq('code', 'tos')
      .single();

    if (!tosExists) {
      console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ Terms of Service...');
      
      const { data: tosType, error: tosError } = await supabase
        .from('document_types')
        .insert({
          code: 'tos',
          name: 'Terms of Service',
          description: '–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã',
          is_required: true,
          is_active: true
        })
        .select()
        .single();

      if (tosError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è document_type:', tosError);
        return;
      }

      // –°–æ–∑–¥–∞–µ–º –≤–µ—Ä—Å–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–∞
      const { data: tosVersion, error: versionError } = await supabase
        .from('document_versions')
        .insert({
          id: 'tos',
          document_type_id: tosType.id,
          version: '1.0',
          title: '–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è',
          content: '–ë–∞–∑–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã TradeFrame Builder.',
          is_active: true
        })
        .select()
        .single();

      if (versionError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è document_version:', versionError);
      } else {
        console.log('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç Terms of Service —Å–æ–∑–¥–∞–Ω');
      }
    } else {
      console.log('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç Terms of Service —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }

  } catch (error) {
    console.log('‚ÑπÔ∏è –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã:', error.message);
    console.log('‚úÖ –≠—Ç–æ –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ú–µ–Ω–µ–¥–∂–µ—Ä–ë–¢–û');
  }
}

createLegalDocuments();