/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è operationsService.ts —Å –ø–æ–ª–Ω—ã–º–∏ –∞–≤–≥—É—Å—Ç–æ–≤—Å–∫–∏–º–∏ –¥–µ–º–æ –¥–∞–Ω–Ω—ã–º–∏
 * –ó–∞–º–µ–Ω—è–µ—Ç initialOperations –º–∞—Å—Å–∏–≤ –≤ —Ñ–∞–π–ª–µ —Å–µ—Ä–≤–∏—Å–∞
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
function loadConvertedOperations() {
  const dataPath = path.join(__dirname, 'august-operations-data.json');
  const rawData = fs.readFileSync(dataPath, 'utf8');
  return JSON.parse(rawData);
}

// –°–æ–∑–¥–∞–µ–º JavaScript –∫–æ–¥ –¥–ª—è –º–∞—Å—Å–∏–≤–∞ –æ–ø–µ—Ä–∞—Ü–∏–π
function generateOperationsArray(operations) {
  const operationStrings = operations.map(op => {
    const fields = [
      `id: "${op.id}"`,
      `operationType: "${op.operationType}"`,
      `status: "${op.status}"`,
      `startTime: "${op.startTime}"`,
      op.endTime ? `endTime: "${op.endTime}"` : 'endTime: undefined',
      op.duration ? `duration: ${op.duration}` : 'duration: undefined',
      op.tradingPointId ? `tradingPointId: "${op.tradingPointId}"` : 'tradingPointId: undefined',
      op.tradingPointName ? `tradingPointName: "${op.tradingPointName}"` : 'tradingPointName: undefined',
      op.deviceId ? `deviceId: "${op.deviceId}"` : 'deviceId: undefined',
      op.transactionId ? `transactionId: "${op.transactionId}"` : 'transactionId: undefined',
      op.fuelType ? `fuelType: "${op.fuelType}"` : 'fuelType: undefined',
      op.quantity ? `quantity: ${op.quantity}` : 'quantity: undefined',
      op.price ? `price: ${op.price}` : 'price: undefined',
      op.totalCost ? `totalCost: ${op.totalCost}` : 'totalCost: undefined',
      op.paymentMethod ? `paymentMethod: "${op.paymentMethod}"` : 'paymentMethod: undefined',
      `details: "${op.details.replace(/"/g, '\\"')}"`,
      op.progress ? `progress: ${op.progress}` : 'progress: undefined',
      `lastUpdated: "${op.lastUpdated}"`,
      op.operatorName ? `operatorName: "${op.operatorName}"` : 'operatorName: undefined',
      op.customerId ? `customerId: "${op.customerId}"` : 'customerId: undefined',
      op.vehicleNumber ? `vehicleNumber: "${op.vehicleNumber}"` : 'vehicleNumber: undefined',
      'metadata: {}',
      `createdAt: new Date('${typeof op.createdAt === 'string' ? op.createdAt : op.createdAt.toISOString()}')`,
      `updatedAt: new Date('${typeof op.updatedAt === 'string' ? op.updatedAt : op.updatedAt.toISOString()}')`
    ];

    return `  {\n    ${fields.join(',\n    ')}\n  }`;
  });

  return `// –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è —Å–µ—Ç–∏ –ê–ó–° (–∞–≤–≥—É—Å—Ç 2025)
// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∏–∑ august-2025-demo-data.json
const initialOperations: Operation[] = [
${operationStrings.join(',\n')}
];`;
}

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª –æ–ø–µ—Ä–∞—Ü–∏–π
function updateOperationsService() {
  console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π...');
  
  const operationsData = loadConvertedOperations();
  console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${operationsData.operations.length} –æ–ø–µ—Ä–∞—Ü–∏–π`);
  
  console.log('üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞ –¥–ª—è operationsService...');
  const newOperationsArray = generateOperationsArray(operationsData.operations);
  
  // –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª —Å–µ—Ä–≤–∏—Å–∞
  const servicePath = path.join(__dirname, 'src', 'services', 'operationsService.ts');
  const serviceContent = fs.readFileSync(servicePath, 'utf8');
  
  // –ò—â–µ–º –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞ initialOperations
  const startPattern = /\/\/ .*–Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.*\nconst initialOperations: Operation\[\] = \[/i;
  const endPattern = /\];\s*\n\n\/\/ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage/;
  
  const startMatch = serviceContent.search(startPattern);
  const endMatch = serviceContent.search(endPattern);
  
  if (startMatch === -1 || endMatch === -1) {
    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫
    const altStartPattern = /const initialOperations: Operation\[\] = \[/;
    const altEndPattern = /\];\s*\n.*\/\/ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage|\/\/ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage/;
    
    const altStartMatch = serviceContent.search(altStartPattern);
    const altEndMatch = serviceContent.search(altEndPattern);
    
    if (altStartMatch !== -1 && altEndMatch !== -1) {
      const beforeArray = serviceContent.substring(0, altStartMatch);
      const afterArray = serviceContent.substring(altEndMatch);
      
      const updatedContent = beforeArray + newOperationsArray + '\n\n// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage' + afterArray.substring(afterArray.indexOf('\nlet operationsData'));
      
      fs.writeFileSync(servicePath, updatedContent);
      console.log('‚úÖ –§–∞–π–ª operationsService.ts —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
      console.log(`üìä –î–æ–±–∞–≤–ª–µ–Ω–æ ${operationsData.operations.length} –æ–ø–µ—Ä–∞—Ü–∏–π –∏–∑ –∞–≤–≥—É—Å—Ç–∞ 2025`);
      
    } else {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–∞—Å—Å–∏–≤ initialOperations –≤ —Ñ–∞–π–ª–µ');
      console.log('–ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –∏ –∑–∞–º–µ–Ω–∏—Ç—å –≤–µ—Å—å –º–∞—Å—Å–∏–≤');
      
      // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
      const backupPath = servicePath + '.backup';
      fs.copyFileSync(servicePath, backupPath);
      console.log(`üíæ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: ${backupPath}`);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ä—É—á–Ω–æ–π –∑–∞–º–µ–Ω—ã
      const newArrayPath = path.join(__dirname, 'new-initial-operations.ts');
      fs.writeFileSync(newArrayPath, newOperationsArray);
      console.log(`üìÑ –ù–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: ${newArrayPath}`);
      console.log('–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –∏ –∑–∞–º–µ–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ initialOperations –≤—Ä—É—á–Ω—É—é');
    }
  } else {
    const beforeArray = serviceContent.substring(0, startMatch);
    const afterArray = serviceContent.substring(endMatch);
    
    const updatedContent = beforeArray + newOperationsArray + '\n\n// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage' + afterArray;
    
    fs.writeFileSync(servicePath, updatedContent);
    console.log('‚úÖ –§–∞–π–ª operationsService.ts —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
    console.log(`üìä –î–æ–±–∞–≤–ª–µ–Ω–æ ${operationsData.operations.length} –æ–ø–µ—Ä–∞—Ü–∏–π –∏–∑ –∞–≤–≥—É—Å—Ç–∞ 2025`);
  }
  
  return operationsData;
}

// –û—á–∏—Å—Ç–∫–∞ localStorage –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π
function clearOperationsCache() {
  const clearScript = `
// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ –æ–ø–µ—Ä–∞—Ü–∏–π –≤ localStorage
// –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞:
localStorage.removeItem('operations');
console.log('–ö—ç—à –æ–ø–µ—Ä–∞—Ü–∏–π –æ—á–∏—â–µ–Ω. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
`;

  const clearScriptPath = path.join(__dirname, 'clear-operations-cache.js');
  fs.writeFileSync(clearScriptPath, clearScript);
  
  console.log(`üßπ –°–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${clearScriptPath}`);
  console.log('–í—ã–ø–æ–ª–Ω–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  try {
    console.log('üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ operationsService —Å –∞–≤–≥—É—Å—Ç–æ–≤—Å–∫–∏–º–∏ –¥–µ–º–æ –¥–∞–Ω–Ω—ã–º–∏...');
    
    const operationsData = updateOperationsService();
    clearOperationsCache();
    
    console.log('\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏');
    console.log('2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: localStorage.removeItem("operations")');
    console.log('3. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É');
    console.log('4. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–û–ø–µ—Ä–∞—Ü–∏–∏" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
    
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:');
    console.log(`- –í—Å–µ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π: ${operationsData.operations.length}`);
    console.log(`- –ü–µ—Ä–∏–æ–¥: –∞–≤–≥—É—Å—Ç 2025`);
    
    const typeStats = operationsData.operations.reduce((acc, op) => {
      acc[op.operationType] = (acc[op.operationType] || 0) + 1;
      return acc;
    }, {});
    
    console.log('- –ü–æ —Ç–∏–ø–∞–º –æ–ø–µ—Ä–∞—Ü–∏–π:');
    Object.entries(typeStats).forEach(([type, count]) => {
      const typeNames = {
        'sale': '–ü—Ä–æ–¥–∞–∂–∏',
        'maintenance': '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ', 
        'sensor_calibration': '–ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –¥–∞—Ç—á–∏–∫–æ–≤',
        'fuel_loading': '–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–ø–ª–∏–≤–∞'
      };
      console.log(`  ‚Ä¢ ${typeNames[type] || type}: ${count}`);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
if (import.meta.url.includes('update-operations-service.js')) {
  main();
}

export { updateOperationsService };