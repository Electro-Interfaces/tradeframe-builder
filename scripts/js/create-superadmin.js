#!/usr/bin/env node

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 */

import { createClient } from '@supabase/supabase-js';
import * as bcrypt from 'bcryptjs';

const SUPABASE_URL = 'https://ssvazdgnmatbdynkhkqo.supabase.co';
const SERVICE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNzdmF6ZGdubWF0YmR5bmtoa3FvIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NzM0MzgzNCwiZXhwIjoyMDcyOTE5ODM0fQ.Gen-PI-vDkKjskpIvJNcQw0Uj3d0zGXB98zIxNK6di0';

const supabase = createClient(SUPABASE_URL, SERVICE_KEY);

async function createSuperAdmin() {
  console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');

  try {
    const email = 'superadmin@tradeframe.com';
    const password = 'SuperAdmin2024!';
    const name = '–°–∏—Å—Ç–µ–º–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä';
    
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const { data: existingUser, error: checkError } = await supabase
      .from('users')
      .select('*')
      .eq('email', email)
      .single();

    if (existingUser && !checkError) {
      console.log('‚ö†Ô∏è  –°—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', existingUser.name);
      console.log('üìß Email:', existingUser.email);
      console.log('üÜî ID:', existingUser.id);
      console.log('üè¢ Tenant ID:', existingUser.tenant_id);
      return;
    }

    // 2. –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏–º —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç–µ–Ω–∞–Ω—Ç
    let systemTenantId;
    const { data: systemTenant, error: tenantError } = await supabase
      .from('tenants')
      .select('*')
      .eq('code', 'system')
      .single();

    if (systemTenant) {
      systemTenantId = systemTenant.id;
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç–µ–Ω–∞–Ω—Ç:', systemTenant.name);
    } else {
      console.log('üè¢ –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç–µ–Ω–∞–Ω—Ç...');
      const { data: newTenant, error: createTenantError } = await supabase
        .from('tenants')
        .insert([{
          name: '–°–∏—Å—Ç–µ–º–∞ TradeFrame',
          code: 'system',
          type: 'system',
          is_active: true,
          settings: {
            description: '–°–∏—Å—Ç–µ–º–Ω—ã–π —Ç–µ–Ω–∞–Ω—Ç –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤',
            external_id: '0'
          }
        }])
        .select()
        .single();

      if (createTenantError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Ç–µ–Ω–∞–Ω—Ç–∞:', createTenantError);
        return;
      }
      
      systemTenantId = newTenant.id;
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π —Ç–µ–Ω–∞–Ω—Ç —Å–æ–∑–¥–∞–Ω:', newTenant.name);
    }

    // 3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ö—ç—à –ø–∞—Ä–æ–ª—è
    const saltRounds = 12;
    const salt = await bcrypt.genSalt(saltRounds);
    const passwordHash = await bcrypt.hash(password, salt);

    // 4. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userData = {
      email: email,
      name: name,
      phone: '+7 (800) 555-35-35',
      status: 'active',
      pwd_salt: salt,
      pwd_hash: passwordHash,
      tenant_id: systemTenantId, // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–º—É —Ç–µ–Ω–∞–Ω—Ç—É
      preferences: {
        role: 'system_admin',
        role_id: 1,
        description: '–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å –ø–æ–ª–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞',
        permissions: ['all'],
        settings: {
          theme: 'dark',
          language: 'ru',
          notifications: true
        }
      },
      last_login: new Date().toISOString(),
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString(),
      deleted_at: null
    };

    const { data: newUser, error: createError } = await supabase
      .from('users')
      .insert([userData])
      .select()
      .single();

    if (createError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', createError);
      return;
    }

    console.log('‚úÖ –°—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('üë§ –ò–º—è:', newUser.name);
    console.log('üìß Email:', newUser.email);
    console.log('üîë –ü–∞—Ä–æ–ª—å:', password);
    console.log('üÜî ID:', newUser.id);
    console.log('üëë –†–æ–ª—å:', newUser.preferences.role);
    console.log('');
    console.log('üéâ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:');
    console.log('   Email: superadmin@tradeframe.com');
    console.log('   –ü–∞—Ä–æ–ª—å: SuperAdmin2024!');
    console.log('');
    console.log('üîí –°—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–º–µ–µ—Ç –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ä–∞–∑–¥–µ–ª–∞–º —Å–∏—Å—Ç–µ–º—ã.');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

createSuperAdmin();