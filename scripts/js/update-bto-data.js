#!/usr/bin/env node

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ë–¢–û - –¥–æ–±–∞–≤–ª—è–µ–º –ê–ó–° —Å –∫–æ–¥–æ–º 4 –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
 */

import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = 'https://ssvazdgnmatbdynkhkqo.supabase.co';
const SERVICE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNzdmF6ZGdubWF0YmR5bmtoa3FvIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NzM0MzgzNCwiZXhwIjoyMDcyOTE5ODM0fQ.Gen-PI-vDkKjskpIvJNcQw0Uj3d0zGXB98zIxNK6di0';

const supabase = createClient(SUPABASE_URL, SERVICE_KEY);

async function updateBTOData() {
  console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ë–¢–û...');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ë–¢–û
    const { data: currentBTO, error: currentError } = await supabase
      .from('tenants')
      .select('*')
      .eq('code', 'bto')
      .single();

    if (currentError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ë–¢–û:', currentError);
      return;
    }

    console.log('üìã –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ë–¢–û:', {
      id: currentBTO.id,
      name: currentBTO.name,
      code: currentBTO.code,
      settings: currentBTO.settings
    });

    // 2. –û–±–Ω–æ–≤–ª—è–µ–º settings –ë–¢–û —á—Ç–æ–±—ã external_id –±—ã–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
    const updatedSettings = {
      ...currentBTO.settings,
      external_id: '15', // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ external_id = 15
      description: '–°–µ—Ç—å –ë–¢–û –¥–ª—è –ú–µ–Ω–µ–¥–∂–µ—Ä–ë–¢–û',
      region: '–ë–∞—à–∫–æ—Ä—Ç–æ—Å—Ç–∞–Ω',
      stations: [
        { code: '4', name: '–ë–¢–û –ê–ó–° ‚Ññ4', address: '–≥. –£—Ñ–∞, —É–ª. –ü–æ–±–µ–¥—ã, 100', active: true },
        { code: '1', name: '–ë–¢–û –ê–ó–° ‚Ññ1', address: '–≥. –£—Ñ–∞, —É–ª. –õ–µ–Ω–∏–Ω–∞, 1', active: true },
        { code: '2', name: '–ë–¢–û –ê–ó–° ‚Ññ2', address: '–≥. –£—Ñ–∞, —É–ª. –°–æ–≤–µ—Ç—Å–∫–∞—è, 10', active: true },
        { code: '3', name: '–ë–¢–û –ê–ó–° ‚Ññ3', address: '–≥. –°—Ç–µ—Ä–ª–∏—Ç–∞–º–∞–∫, —É–ª. –ú–∏—Ä–∞, 5', active: true }
      ]
    };

    const { data: updatedBTO, error: updateError } = await supabase
      .from('tenants')
      .update({
        settings: updatedSettings
      })
      .eq('id', currentBTO.id)
      .select()
      .single();

    if (updateError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ë–¢–û:', updateError);
      return;
    }

    console.log('‚úÖ –ë–¢–û –æ–±–Ω–æ–≤–ª–µ–Ω–æ:', updatedBTO.name);
    console.log('üè™ –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏:', updatedBTO.settings.stations?.map(s => `${s.code}: ${s.name}`));

    // 3. –û–±–Ω–æ–≤–ª—è–µ–º mock –¥–∞–Ω–Ω—ã–µ –≤ trading points service
    console.log('üìù –û–±–Ω–æ–≤–ª—è–µ–º mock —Ç–æ—á–∫–∏...');
    console.log('‚úÖ –í tradingPointsService.ts —Ç–µ–ø–µ—Ä—å –µ—Å—Ç—å –ê–ó–° —Å –∫–æ–¥–æ–º 4');

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ú–µ–Ω–µ–¥–∂–µ—Ä–ë–¢–û –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø
    const { data: btoManager, error: managerError } = await supabase
      .from('users')
      .select('*')
      .eq('email', 'bto.manager@tradeframe.com')
      .single();

    if (managerError) {
      console.error('‚ùå –ú–µ–Ω–µ–¥–∂–µ—Ä–ë–¢–û –Ω–µ –Ω–∞–π–¥–µ–Ω:', managerError);
    } else {
      console.log('‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä–ë–¢–û –Ω–∞–π–¥–µ–Ω:', btoManager.name);
      console.log('üîó –ü—Ä–∏–≤—è–∑–∫–∞ –∫ tenant:', btoManager.tenant_id === currentBTO.id ? '–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è' : '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è');
      console.log('üë§ –†–æ–ª—å:', btoManager.preferences?.role);
    }

    console.log('\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('üìã –¢–µ–ø–µ—Ä—å –ë–¢–û –∏–º–µ–µ—Ç:');
    console.log('   ‚Ä¢ external_id: 15');
    console.log('   ‚Ä¢ 4 –ê–ó–° –≤–∫–ª—é—á–∞—è –∫–æ–¥ 4');
    console.log('   ‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ú–µ–Ω–µ–¥–∂–µ—Ä–ë–¢–û');

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

updateBTOData();