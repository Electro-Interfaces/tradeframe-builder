#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// –ß–∏—Ç–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ TypeScript
function getVersionFromConfig() {
  try {
    const versionPath = path.join(__dirname, '../src/config/version.ts');
    const content = fs.readFileSync(versionPath, 'utf8');
    const match = content.match(/APP_VERSION = '([^']+)'/);
    if (match) {
      return match[1];
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error.message);
  }
  return null;
}

// –û–±–Ω–æ–≤–ª—è–µ–º package.json
function updatePackageJson(version) {
  try {
    const packagePath = path.join(__dirname, '../package.json');
    const packageJson = JSON.parse(fs.readFileSync(packagePath, 'utf8'));
    packageJson.version = version;
    fs.writeFileSync(packagePath, JSON.stringify(packageJson, null, 2) + '\n');
    console.log(`‚úÖ package.json –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –≤–µ—Ä—Å–∏–∏ ${version}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è package.json:', error.message);
  }
}

// –û–±–Ω–æ–≤–ª—è–µ–º manifest.json
function updateManifestJson(version) {
  try {
    const manifestPath = path.join(__dirname, '../public/manifest.json');
    const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));
    manifest.version = version;
    fs.writeFileSync(manifestPath, JSON.stringify(manifest, null, 2) + '\n');
    console.log(`‚úÖ manifest.json –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –≤–µ—Ä—Å–∏–∏ ${version}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è manifest.json:', error.message);
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤–µ—Ä—Å–∏–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');

  const version = getVersionFromConfig();
  if (!version) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
    process.exit(1);
  }

  console.log(`üì¶ –ù–∞–π–¥–µ–Ω–∞ –≤–µ—Ä—Å–∏—è: ${version}`);

  updatePackageJson(version);
  updateManifestJson(version);

  console.log('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤–µ—Ä—Å–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

main();