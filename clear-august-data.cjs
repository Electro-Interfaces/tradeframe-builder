/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞ –∞–≤–≥—É—Å—Ç 2025
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ Node.js —Å –ø—Ä—è–º—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Supabase
 */

const { operationsService } = require('./src/services/operationsSupabaseService');

async function clearAugustDemoData() {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö –∑–∞ –∞–≤–≥—É—Å—Ç 2025...');
    console.log('‚ÑπÔ∏è –°—Ç–∞–Ω—Ü–∏—è 4 —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å 2 —Å–µ–Ω—Ç—è–±—Ä—è 2025');
    console.log('‚ÑπÔ∏è –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–æ —ç—Ç–æ–π –¥–∞—Ç—ã —è–≤–ª—è—é—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏\n');

    // –í—ã–ø–æ–ª–Ω—è–µ–º –æ—á–∏—Å—Ç–∫—É
    const result = await operationsService.clearAugustDemoData();

    if (result.success) {
      console.log('\n‚úÖ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!');
      console.log(`üìä –£–¥–∞–ª–µ–Ω–æ –æ–ø–µ—Ä–∞—Ü–∏–π: ${result.deletedCount}`);
      
      if (result.deletedCount > 0) {
        console.log('\nüéâ –†–µ–∑—É–ª—å—Ç–∞—Ç:');
        console.log('‚ùå –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –∑–∞ –∞–≤–≥—É—Å—Ç —É–¥–∞–ª–µ–Ω—ã');
        console.log('‚úÖ –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å 2 —Å–µ–Ω—Ç—è–±—Ä—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
        console.log('üîÑ –¢–µ–ø–µ—Ä—å —Å—Ç–∞–Ω—Ü–∏—è 4 –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
      } else {
        console.log('\n‚ú® –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ –±—ã–ª–∞ –æ—á–∏—â–µ–Ω–∞ –æ—Ç –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö');
      }

    } else {
      console.error('\n‚ùå –û–®–ò–ë–ö–ê –ü–†–ò –û–ß–ò–°–¢–ö–ï:');
      console.error(result.error);
      process.exit(1);
    }

  } catch (error) {
    console.error('\nüí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:');
    console.error(error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
clearAugustDemoData();