#!/usr/bin/env node

/**
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å document_versions
 */

import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = 'https://ssvazdgnmatbdynkhkqo.supabase.co';
const SERVICE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNzdmF6ZGdubWF0YmR5bmtoa3FvIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NzM0MzgzNCwiZXhwIjoyMDcyOTE5ODM0fQ.Gen-PI-vDkKjskpIvJNcQw0Uj3d0zGXB98zIxNK6di0';

const supabase = createClient(SUPABASE_URL, SERVICE_KEY);

async function fixDocumentVersion() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ document_versions...');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ document_versions
    const { data: versions, error: versionsError } = await supabase
      .from('document_versions')
      .select('*');

    if (versionsError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ document_versions:', versionsError);
      return;
    }

    console.log('üìã –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:', versions?.length || 0);
    versions?.forEach(v => {
      console.log(`   ‚Ä¢ ${v.id}: ${v.title || v.document_type_id}`);
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç —Å ID 'tos'
    const { data: tosDoc, error: tosError } = await supabase
      .from('document_versions')
      .select('*')
      .eq('id', 'tos')
      .single();

    if (tosError) {
      console.log('‚ùå –î–æ–∫—É–º–µ–Ω—Ç —Å ID "tos" –Ω–µ –Ω–∞–π–¥–µ–Ω:', tosError);
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç
      console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ tos...');
      
      const { data: newDoc, error: createError } = await supabase
        .from('document_versions')
        .insert({
          id: 'tos',
          title: 'Terms of Service',
          content: '–ë–∞–∑–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è TradeFrame Builder',
          version: '1.0',
          is_active: true,
          document_type_id: null // –ú–æ–∂–µ—Ç –±—ã—Ç—å null, –µ—Å–ª–∏ –Ω–µ—Ç —Å–≤—è–∑–∏ —Å document_types
        })
        .select()
        .single();

      if (createError) {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç:', createError);
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥ - —Å–æ–∑–¥–∞—Ç—å –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è id
        const { data: newDoc2, error: createError2 } = await supabase
          .from('document_versions')
          .insert({
            title: 'Terms of Service',
            content: '–ë–∞–∑–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è TradeFrame Builder',
            version: '1.0',
            is_active: true
          })
          .select()
          .single();

        if (createError2) {
          console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç (—Å–ø–æ—Å–æ–± 2):', createError2);
        } else {
          console.log('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º ID:', newDoc2.id);
          
          // –ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç ID
          console.log('‚ö†Ô∏è –ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ID:', newDoc2.id);
        }
      } else {
        console.log('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç tos —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ:', newDoc);
      }
      
    } else {
      console.log('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç tos –Ω–∞–π–¥–µ–Ω:', tosDoc.title);
    }

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

fixDocumentVersion();