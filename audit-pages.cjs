#!/usr/bin/env node

/**
 * üîç –ü–û–õ–ù–´–ô –ê–£–î–ò–¢ –ì–û–¢–û–í–ù–û–°–¢–ò –ö SUPABASE –ú–ò–ì–†–ê–¶–ò–ò
 * –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö 37 —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

const fs = require('fs');
const path = require('path');

// –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –∞—É–¥–∏—Ç–∞ –∏–∑ App.tsx
const PAGES_TO_AUDIT = [
  // ADMIN –†–ê–ó–î–ï–õ
  { route: '/admin/users-and-roles', component: 'Users', file: 'admin/Users.tsx' },
  { route: '/admin/users-and-roles-new', component: 'NewUsersAndRoles', file: 'admin/UsersAndRoles.tsx' },
  { route: '/admin/users', component: 'AdminUsers', file: 'AdminUsers.tsx' },
  { route: '/admin/roles', component: 'Roles', file: 'admin/Roles.tsx' },
  { route: '/admin/instructions', component: 'Instructions', file: 'admin/Instructions.tsx' },
  { route: '/admin/networks', component: 'NetworksPage', file: 'NetworksPage.tsx' },
  { route: '/admin/audit', component: 'AuditLog', file: 'AuditLog.tsx' },
  { route: '/admin/data-migration', component: 'DataMigration', file: 'DataMigration.tsx' },
  { route: '/admin/test-services', component: 'TestServices', file: 'TestServices.tsx' },
  { route: '/admin/test-simple', component: 'TestServicesSimple', file: 'TestServicesSimple.tsx' },
  { route: '/admin/test-debug', component: 'TestDebug', file: 'TestDebug.tsx' },
  { route: '/admin/data-inspector', component: 'DataInspector', file: 'DataInspector.tsx' },
  { route: '/admin/legal-documents', component: 'LegalDocuments', file: 'LegalDocuments.tsx' },
  { route: '/admin/legal-documents/users-acceptances', component: 'LegalUsersAcceptances', file: 'LegalUsersAcceptances.tsx' },
  { route: '/admin/legal-documents/:docType/edit', component: 'LegalDocumentEditor', file: 'LegalDocumentEditor.tsx' },

  // SETTINGS –†–ê–ó–î–ï–õ
  { route: '/settings/dictionaries/equipment-types', component: 'EquipmentTypes', file: 'EquipmentTypes.tsx' },
  { route: '/settings/dictionaries/component-types', component: 'ComponentTypes', file: 'ComponentTypes.tsx' },
  { route: '/settings/dictionaries/command-templates', component: 'CommandTemplates', file: 'CommandTemplates.tsx' },
  { route: '/settings/templates/command-templates', component: 'NewCommandTemplates', file: 'NewCommandTemplates.tsx' },
  { route: '/settings/connections', component: 'Connections', file: 'Connections.tsx' },
  { route: '/settings/database', component: 'DatabaseSettings', file: 'DatabaseSettings.tsx' },
  { route: '/settings/partial-migration', component: 'PartialMigrationSettings', file: 'PartialMigrationSettings.tsx' },
  { route: '/settings/nomenclature', component: 'Nomenclature', file: 'Nomenclature.tsx' },
  { route: '/settings/workflows', component: 'Workflows', file: 'Workflows.tsx' },

  // NETWORK –†–ê–ó–î–ï–õ
  { route: '/', component: 'NetworkOverview', file: 'NetworkOverview.tsx' },
  { route: '/network/overview', component: 'NetworkOverview', file: 'NetworkOverview.tsx' },
  { route: '/network/sales-analysis', component: 'SalesAnalysisPage', file: 'SalesAnalysisPage.tsx' },
  { route: '/network/operations-transactions', component: 'OperationsTransactionsPageSimple', file: 'OperationsTransactionsPageSimple.tsx' },
  { route: '/network/price-history', component: 'PriceHistoryPage', file: 'PriceHistoryPage.tsx' },
  { route: '/network/fuel-stocks', component: 'FuelStocksPage', file: 'FuelStocksPage.tsx' },
  { route: '/network/equipment-log', component: 'NetworkEquipmentLog', file: 'NetworkEquipmentLog.tsx' },
  { route: '/network/notifications', component: 'NotificationRules', file: 'NotificationRules.tsx' },
  { route: '/network/messages', component: 'Messages', file: 'Messages.tsx' },

  // POINT –†–ê–ó–î–ï–õ
  { route: '/point/prices', component: 'Prices', file: 'Prices.tsx' },
  { route: '/point/tanks', component: 'Tanks', file: 'Tanks.tsx' },
  { route: '/point/shift-reports', component: 'ShiftReports', file: 'ShiftReports.tsx' },
  { route: '/point/equipment', component: 'Equipment', file: 'Equipment.tsx' },

  // –ü–†–û–ß–ò–ï
  { route: '/profile', component: 'Profile', file: 'Profile.tsx' },
];

// –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞—É–¥–∏—Ç–∞
const auditResults = {
  pages: [],
  summary: {
    total: PAGES_TO_AUDIT.length,
    loadable: 0,
    hasErrors: 0,
    readyForSupabase: 0,
    useMockData: 0,
    useRealAPI: 0
  }
};

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–∞–π–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã
 */
function analyzePageFile(filePath) {
  try {
    if (!fs.existsSync(filePath)) {
      return {
        exists: false,
        services: [],
        hasErrors: true,
        error: '–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω'
      };
    }

    const content = fs.readFileSync(filePath, 'utf8');
    const services = [];
    const errors = [];

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç—ã —Å–µ—Ä–≤–∏—Å–æ–≤
    const serviceImports = content.match(/import.*from ['"]@?\/services\/[^'"]+['"]/g) || [];
    serviceImports.forEach(imp => {
      const match = imp.match(/from ['"]@?\/services\/([^'"]+)['"]/);
      if (match) {
        services.push(match[1]);
      }
    });

    // –ò—â–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ React Query
    const hasReactQuery = content.includes('useQuery') || content.includes('useMutation');

    // –ò—â–µ–º CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏
    const crudPatterns = {
      create: /create|add|post/gi,
      read: /get|fetch|load|find/gi,
      update: /update|edit|put|patch/gi,
      delete: /delete|remove/gi
    };

    const crudOperations = {};
    Object.keys(crudPatterns).forEach(operation => {
      crudOperations[operation] = crudPatterns[operation].test(content);
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ mock –¥–∞–Ω–Ω—ã—Ö
    const usesMockData = content.includes('mock') || content.includes('Mock') || 
                        content.includes('localStorage') || content.includes('sessionStorage');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
    const syntaxErrors = [];
    if (content.includes('undefined') && content.includes('...undefined')) {
      syntaxErrors.push('–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã undefined –∑–Ω–∞—á–µ–Ω–∏—è');
    }

    return {
      exists: true,
      services,
      hasReactQuery,
      crudOperations,
      usesMockData,
      errors: syntaxErrors,
      hasErrors: syntaxErrors.length > 0,
      linesOfCode: content.split('\n').length
    };

  } catch (error) {
    return {
      exists: false,
      services: [],
      hasErrors: true,
      error: error.message
    };
  }
}

/**
 * –û—Ü–µ–Ω–∏–≤–∞–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ Supabase
 */
function evaluateSupabaseReadiness(pageAnalysis) {
  let score = 0;
  let complexity = '–Ω–∏–∑–∫–∞—è';
  let timeEstimate = '1-2 —á–∞—Å–∞';

  // –§–∞–∫—Ç–æ—Ä—ã –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
  if (pageAnalysis.exists) score += 20;
  if (!pageAnalysis.hasErrors) score += 20;
  if (pageAnalysis.hasReactQuery) score += 15;
  if (pageAnalysis.usesMockData) score += 10; // Mock –¥–∞–Ω–Ω—ã–µ –ª–µ–≥—á–µ –º–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å
  
  // CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤–ª–∏—è—é—Ç –Ω–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç—å
  const crudCount = Object.values(pageAnalysis.crudOperations).filter(Boolean).length;
  if (crudCount === 0) {
    score += 20;
    complexity = '–Ω–∏–∑–∫–∞—è';
    timeEstimate = '30 –º–∏–Ω - 1 —á–∞—Å';
  } else if (crudCount <= 2) {
    score += 15;
    complexity = '—Å—Ä–µ–¥–Ω—è—è';
    timeEstimate = '2-4 —á–∞—Å–∞';
  } else {
    score += 5;
    complexity = '–≤—ã—Å–æ–∫–∞—è';
    timeEstimate = '1-2 –¥–Ω—è';
  }

  // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–∏—Å–æ–≤
  if (pageAnalysis.services.length === 0) score += 15;
  else if (pageAnalysis.services.length <= 2) score += 10;
  else score += 5;

  return {
    score: Math.min(score, 100),
    complexity,
    timeEstimate,
    crudComplexity: crudCount
  };
}

/**
 * –ü—Ä–æ–≤–æ–¥–∏—Ç –∞—É–¥–∏—Ç –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
 */
function auditAllPages() {
  console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—ã–π –∞—É–¥–∏—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ Supabase –º–∏–≥—Ä–∞—Ü–∏–∏...\n');
  console.log(`üìä –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ${PAGES_TO_AUDIT.length}\n`);

  PAGES_TO_AUDIT.forEach((page, index) => {
    const pageFilePath = path.join(__dirname, 'src', 'pages', page.file);
    console.log(`[${index + 1}/${PAGES_TO_AUDIT.length}] –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º: ${page.route}`);
    
    const analysis = analyzePageFile(pageFilePath);
    const readiness = evaluateSupabaseReadiness(analysis);
    
    const pageResult = {
      route: page.route,
      component: page.component,
      file: page.file,
      filePath: pageFilePath,
      analysis,
      readiness,
      section: page.route.startsWith('/admin') ? 'ADMIN' :
               page.route.startsWith('/settings') ? 'SETTINGS' :
               page.route.startsWith('/network') ? 'NETWORK' :
               page.route.startsWith('/point') ? 'POINT' : 'OTHER'
    };

    auditResults.pages.push(pageResult);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤–æ–¥–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    if (analysis.exists && !analysis.hasErrors) auditResults.summary.loadable++;
    if (analysis.hasErrors) auditResults.summary.hasErrors++;
    if (readiness.score >= 70) auditResults.summary.readyForSupabase++;
    if (analysis.usesMockData) auditResults.summary.useMockData++;
    if (!analysis.usesMockData && analysis.services.length > 0) auditResults.summary.useRealAPI++;

    console.log(`   ‚úÖ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: ${readiness.score}% | –°–ª–æ–∂–Ω–æ—Å—Ç—å: ${readiness.complexity} | –í—Ä–µ–º—è: ${readiness.timeEstimate}`);
  });

  return auditResults;
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
 */
function generateDetailedReport(results) {
  let report = '';
  
  report += '# üîç –ü–û–õ–ù–´–ô –ê–£–î–ò–¢ –ì–û–¢–û–í–ù–û–°–¢–ò –ö SUPABASE –ú–ò–ì–†–ê–¶–ò–ò\n\n';
  report += `**–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:** ${new Date().toLocaleString('ru-RU')}\n`;
  report += `**–í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü:** ${results.summary.total}\n\n`;

  // –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  report += '## üìä –°–í–û–î–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê\n\n';
  report += `- ‚úÖ –ó–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫: **${results.summary.loadable}/${results.summary.total}** (${Math.round(results.summary.loadable/results.summary.total*100)}%)\n`;
  report += `- ‚ùå –ò–º–µ—é—Ç –æ—à–∏–±–∫–∏: **${results.summary.hasErrors}** —Å—Ç—Ä–∞–Ω–∏—Ü\n`;
  report += `- üöÄ –ì–æ—Ç–æ–≤—ã –∫ –º–∏–≥—Ä–∞—Ü–∏–∏ (‚â•70%): **${results.summary.readyForSupabase}** —Å—Ç—Ä–∞–Ω–∏—Ü\n`;
  report += `- üé≠ –ò—Å–ø–æ–ª—å–∑—É—é—Ç Mock –¥–∞–Ω–Ω—ã–µ: **${results.summary.useMockData}** —Å—Ç—Ä–∞–Ω–∏—Ü\n`;
  report += `- üåê –ò—Å–ø–æ–ª—å–∑—É—é—Ç —Ä–µ–∞–ª—å–Ω—ã–π API: **${results.summary.useRealAPI}** —Å—Ç—Ä–∞–Ω–∏—Ü\n\n`;

  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º
  const sections = ['ADMIN', 'SETTINGS', 'NETWORK', 'POINT', 'OTHER'];
  
  sections.forEach(section => {
    const sectionPages = results.pages.filter(p => p.section === section);
    if (sectionPages.length === 0) return;

    report += `## üìÇ –†–ê–ó–î–ï–õ ${section} (${sectionPages.length} —Å—Ç—Ä–∞–Ω–∏—Ü)\n\n`;
    
    sectionPages.forEach(page => {
      const ready = page.readiness.score >= 70 ? 'üü¢' : page.readiness.score >= 40 ? 'üü°' : 'üî¥';
      const errors = page.analysis.hasErrors ? '‚ùå' : '‚úÖ';
      
      report += `### ${ready} ${page.route}\n\n`;
      report += `**–ö–æ–º–ø–æ–Ω–µ–Ω—Ç:** \`${page.component}\`\n`;
      report += `**–§–∞–π–ª:** \`${page.file}\`\n`;
      report += `**–°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏:** ${errors} ${page.analysis.exists ? '–°—É—â–µ—Å—Ç–≤—É–µ—Ç' : '–ù–µ –Ω–∞–π–¥–µ–Ω'}\n`;
      
      if (page.analysis.hasErrors) {
        report += `**–û—à–∏–±–∫–∏:** ${page.analysis.error || page.analysis.errors.join(', ')}\n`;
      }
      
      report += `**–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ Supabase:** ${page.readiness.score}%\n`;
      report += `**–°–ª–æ–∂–Ω–æ—Å—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏:** ${page.readiness.complexity}\n`;
      report += `**–í—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã:** ${page.readiness.timeEstimate}\n`;
      
      if (page.analysis.services.length > 0) {
        report += `**–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã:** ${page.analysis.services.join(', ')}\n`;
      }
      
      report += `**CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏:** `;
      const crud = page.analysis.crudOperations;
      const crudList = [];
      if (crud?.create) crudList.push('Create');
      if (crud?.read) crudList.push('Read');
      if (crud?.update) crudList.push('Update');
      if (crud?.delete) crudList.push('Delete');
      report += crudList.length > 0 ? crudList.join(', ') : '–ù–µ—Ç';
      report += '\n';
      
      report += `**–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö:** ${page.analysis.usesMockData ? 'Mock/localStorage' : '–†–µ–∞–ª—å–Ω—ã–π API'}\n`;
      report += `**React Query:** ${page.analysis.hasReactQuery ? '–î–∞' : '–ù–µ—Ç'}\n`;
      
      if (page.analysis.linesOfCode) {
        report += `**–†–∞–∑–º–µ—Ä –∫–æ–¥–∞:** ${page.analysis.linesOfCode} —Å—Ç—Ä–æ–∫\n`;
      }
      
      report += '\n---\n\n';
    });
  });

  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  report += '## üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ú–ò–ì–†–ê–¶–ò–ò\n\n';
  
  const highPriority = results.pages.filter(p => p.readiness.score >= 70);
  const mediumPriority = results.pages.filter(p => p.readiness.score >= 40 && p.readiness.score < 70);
  const lowPriority = results.pages.filter(p => p.readiness.score < 40);

  report += `### üü¢ –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç (–≥–æ—Ç–æ–≤—ã –∫ –º–∏–≥—Ä–∞—Ü–∏–∏): ${highPriority.length} —Å—Ç—Ä–∞–Ω–∏—Ü\n\n`;
  highPriority.forEach(p => {
    report += `- **${p.route}** - ${p.readiness.timeEstimate}\n`;
  });

  report += `\n### üü° –°—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç (—Ç—Ä–µ–±—É—é—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏): ${mediumPriority.length} —Å—Ç—Ä–∞–Ω–∏—Ü\n\n`;
  mediumPriority.forEach(p => {
    report += `- **${p.route}** - ${p.readiness.timeEstimate}\n`;
  });

  report += `\n### üî¥ –ù–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç (—Ç—Ä–µ–±—É—é—Ç —Å–µ—Ä—å–µ–∑–Ω–æ–π –¥–æ—Ä–∞–±–æ—Ç–∫–∏): ${lowPriority.length} —Å—Ç—Ä–∞–Ω–∏—Ü\n\n`;
  lowPriority.forEach(p => {
    report += `- **${p.route}** - ${p.readiness.timeEstimate}\n`;
  });

  // –û–±—â–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏
  report += '\n## ‚è±Ô∏è –û–ë–©–ò–ï –í–†–ï–ú–ï–ù–ù–´–ï –û–¶–ï–ù–ö–ò\n\n';
  const totalEstimate = results.pages.reduce((acc, page) => {
    const hours = page.readiness.timeEstimate.includes('–¥–µ–Ω—å') ? 16 : 
                  page.readiness.timeEstimate.includes('—á–∞—Å') ? 3 : 0.5;
    return acc + hours;
  }, 0);
  
  report += `**–û–±—â–µ–µ –≤—Ä–µ–º—è –º–∏–≥—Ä–∞—Ü–∏–∏:** ~${Math.round(totalEstimate)} —á–∞—Å–æ–≤ (${Math.round(totalEstimate/8)} —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π)\n\n`;
  
  report += '**–≠—Ç–∞–ø—ã –º–∏–≥—Ä–∞—Ü–∏–∏:**\n';
  report += `1. –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ~${Math.round(totalEstimate * 0.3)} —á–∞—Å–æ–≤\n`;
  report += `2. –°—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ~${Math.round(totalEstimate * 0.4)} —á–∞—Å–æ–≤\n`;
  report += `3. –ù–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ~${Math.round(totalEstimate * 0.3)} —á–∞—Å–æ–≤\n\n`;

  return report;
}

// –ó–∞–ø—É—Å–∫ –∞—É–¥–∏—Ç–∞
if (require.main === module) {
  const results = auditAllPages();
  const report = generateDetailedReport(results);
  
  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
  const reportPath = path.join(__dirname, 'SUPABASE_MIGRATION_AUDIT_REPORT.md');
  fs.writeFileSync(reportPath, report, 'utf8');
  
  console.log('\n' + '='.repeat(80));
  console.log('‚úÖ –ê–£–î–ò–¢ –ó–ê–í–ï–†–®–ï–ù!');
  console.log('='.repeat(80));
  console.log(`üìä –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${results.summary.total}`);
  console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫: ${results.summary.loadable}`);
  console.log(`üöÄ –ì–æ—Ç–æ–≤—ã –∫ –º–∏–≥—Ä–∞—Ü–∏–∏: ${results.summary.readyForSupabase}`);
  console.log(`üìÑ –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${reportPath}`);
  console.log('='.repeat(80));
}

module.exports = { auditAllPages, generateDetailedReport, PAGES_TO_AUDIT };