const { createClient } = require('@supabase/supabase-js');

async function cleanupStation4Operations() {
  try {
    console.log('üöÄ –û—á–∏—Å—Ç–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è —Å–µ—Ç–∏ 15, —Å—Ç–∞–Ω—Ü–∏–∏ 4...');
    
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
    const supabaseUrl = 'https://vxlswbjgsjdvsgwojlka.supabase.co';
    const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ4bHN3Ympnc2pkdnNnd29qbGthIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzM3MzI3MTYsImV4cCI6MjA0OTMwODcxNn0.aDGa_3JoNDJaQg5fUECqjqUBBVa9lLCxzWLdBVzN6Ws';
    
    const supabase = createClient(supabaseUrl, supabaseKey);
    console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // 1. –ù–∞–π–¥–µ–º —Ç–æ—Ä–≥–æ–≤—É—é —Ç–æ—á–∫—É "–ê–ó–° 4" –¥–ª—è —Å–µ—Ç–∏ 15
    console.log('üîç –ü–æ–∏—Å–∫ —Ç–æ—Ä–≥–æ–≤–æ–π —Ç–æ—á–∫–∏ –ê–ó–° 4...');
    const { data: tradingPoints, error: tpError } = await supabase
      .from('trading_points')
      .select('id, external_id, name, network_id')
      .or('external_id.eq.4,name.ilike.%–ê–ó–° 4%,name.ilike.%—Å—Ç–∞–Ω—Ü–∏—è 4%');
    
    if (tpError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Ç–æ—Ä–≥–æ–≤–æ–π —Ç–æ—á–∫–∏:', tpError);
      process.exit(1);
    }
    
    console.log('üìç –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ç–æ—á–∫–∏:', tradingPoints);
    
    // –ù–∞–π–¥–µ–º —Ç–æ—á–∫—É —Å external_id = "4"
    const station4 = tradingPoints?.find(tp => tp.external_id === '4' || tp.external_id === 4);
    
    if (!station4) {
      console.log('‚ùå –¢–æ—Ä–≥–æ–≤–∞—è —Ç–æ—á–∫–∞ –ê–ó–° 4 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      process.exit(1);
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ç–æ—Ä–≥–æ–≤–∞—è —Ç–æ—á–∫–∞: ${station4.name} (ID: ${station4.id})`);
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–æ 2 —Å–µ–Ω—Ç—è–±—Ä—è 2025 –¥–ª—è —ç—Ç–æ–π —Å—Ç–∞–Ω—Ü–∏–∏
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞ –∞–≤–≥—É—Å—Ç –¥–ª—è —Å—Ç–∞–Ω—Ü–∏–∏ 4...');
    const { data: operationsToCheck, error: checkError } = await supabase
      .from('operations')
      .select('id, start_time, operation_type, total_cost')
      .eq('trading_point_id', station4.id)
      .lt('start_time', '2025-09-02T00:00:00Z')
      .order('start_time');
    
    if (checkError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–ø–µ—Ä–∞—Ü–∏–π:', checkError);
      process.exit(1);
    }
    
    const countToDelete = operationsToCheck?.length || 0;
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –æ–ø–µ—Ä–∞—Ü–∏–π —Å—Ç–∞–Ω—Ü–∏–∏ 4 –∑–∞ –∞–≤–≥—É—Å—Ç: ${countToDelete}`);
    
    if (countToDelete === 0) {
      console.log('‚úÖ –û–ø–µ—Ä–∞—Ü–∏–π —Å—Ç–∞–Ω—Ü–∏–∏ 4 –∑–∞ –∞–≤–≥—É—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —É–∂–µ —á–∏—Å—Ç–æ');
      return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏–π
    console.log('\nüìã –û–ø–µ—Ä–∞—Ü–∏–∏ –∫ —É–¥–∞–ª–µ–Ω–∏—é:');
    operationsToCheck.forEach((op, index) => {
      console.log(`   ${index + 1}. ${op.start_time} - ${op.operation_type} - ${op.total_cost || 0}‚ÇΩ`);
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç
    if (operationsToCheck.length > 0) {
      const firstOp = operationsToCheck[0];
      const lastOp = operationsToCheck[operationsToCheck.length - 1];
      console.log(`\nüìÖ –î–∏–∞–ø–∞–∑–æ–Ω: ${firstOp.start_time} ‚Üí ${lastOp.start_time}`);
    }
    
    console.log('\n‚ö†Ô∏è –°—Ç–∞–Ω—Ü–∏—è 4 —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å 2 —Å–µ–Ω—Ç—è–±—Ä—è 2025');
    console.log('‚ÑπÔ∏è –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–æ —ç—Ç–æ–π –¥–∞—Ç—ã —è–≤–ª—è—é—Ç—Å—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏');
    
    // 3. –£–¥–∞–ª—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞–Ω—Ü–∏–∏ 4 –¥–æ 2 —Å–µ–Ω—Ç—è–±—Ä—è
    console.log('\nüóëÔ∏è –£–¥–∞–ª—è–µ–º –¥–µ–º–æ-–æ–ø–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞–Ω—Ü–∏–∏ 4...');
    const { data: deletedOps, error: deleteError } = await supabase
      .from('operations')
      .delete()
      .eq('trading_point_id', station4.id)
      .lt('start_time', '2025-09-02T00:00:00Z')
      .select('id');
    
    if (deleteError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π:', deleteError);
      process.exit(1);
    }
    
    const deletedCount = deletedOps?.length || 0;
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –æ–ø–µ—Ä–∞—Ü–∏–π —Å—Ç–∞–Ω—Ü–∏–∏ 4: ${deletedCount}`);
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
    const { data: remainingAugustOps, error: verifyError } = await supabase
      .from('operations')
      .select('id')
      .eq('trading_point_id', station4.id)
      .lt('start_time', '2025-09-02T00:00:00Z');
    
    if (verifyError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', verifyError);
    } else {
      const remainingCount = remainingAugustOps?.length || 0;
      if (remainingCount === 0) {
        console.log('‚úÖ –û–ø–µ—Ä–∞—Ü–∏–π —Å—Ç–∞–Ω—Ü–∏–∏ 4 –∑–∞ –∞–≤–≥—É—Å—Ç –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å');
      } else {
        console.log(`‚ö†Ô∏è –û—Å—Ç–∞–ª–æ—Å—å ${remainingCount} –æ–ø–µ—Ä–∞—Ü–∏–π —Å—Ç–∞–Ω—Ü–∏–∏ 4 –∑–∞ –∞–≤–≥—É—Å—Ç`);
      }
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–Ω—Ç—è–±—Ä—å—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞–Ω—Ü–∏–∏ 4
    const { data: septemberOps, error: septError } = await supabase
      .from('operations')
      .select('id, start_time')
      .eq('trading_point_id', station4.id)
      .gte('start_time', '2025-09-02T00:00:00Z')
      .order('start_time');
    
    if (septError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ–Ω—Ç—è–±—Ä—å—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π:', septError);
    } else {
      const septemberCount = septemberOps?.length || 0;
      console.log(`‚úÖ –†–µ–∞–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å—Ç–∞–Ω—Ü–∏–∏ 4 —Å 2 —Å–µ–Ω—Ç—è–±—Ä—è: ${septemberCount}`);
      
      if (septemberCount > 0) {
        const firstRealOp = septemberOps[0];
        console.log(`   –ü–µ—Ä–≤–∞—è —Ä–µ–∞–ª—å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è: ${firstRealOp.start_time}`);
      }
    }
    
    console.log('\nüéâ –û–ß–ò–°–¢–ö–ê –°–¢–ê–ù–¶–ò–ò 4 –ó–ê–í–ï–†–®–ï–ù–ê!');
    console.log('‚ùå –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏ 4 –∑–∞ –∞–≤–≥—É—Å—Ç —É–¥–∞–ª–µ–Ω—ã');
    console.log('‚úÖ –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏ 4 —Å 2 —Å–µ–Ω—Ç—è–±—Ä—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
    console.log('üè™ –¢–µ–ø–µ—Ä—å –ê–ó–° 4 –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
    
  } catch (error) {
    console.error('\nüí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:');
    console.error(error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É
cleanupStation4Operations();